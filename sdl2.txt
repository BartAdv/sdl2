-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Both high- and low-level bindings to the SDL library (version 2.0.3).
--   
--   This package contains bindings to the SDL 2 library, in both high- and
--   low-level forms:
--   
--   The <a>SDL</a> namespace contains high-level bindings, where
--   enumerations are split into sum types, and we perform automatic
--   error-checking.
--   
--   The <a>SDL.Raw</a> namespace contains an almost 1-1 translation of the
--   C API into Haskell FFI calls. As such, this does not contain sum types
--   nor error checking. Thus this namespace is suitable for building your
--   own abstraction over SDL, but is not recommended for day-to-day
--   programming.
@package sdl2
@version 2.0.0


-- | This module is analogous to <a>SDL.Raw.Enum</a>, providing pattern
--   synonyms for all enumerators.
module SDL.Raw.Enum.Pattern
type AudioStatus = Word32
type BlendMode = Word32
type EventAction = Word32
type GameControllerAxis = Int32
type GameControllerButton = Int32
type GLattr = Word32
type HintPriority = Word32
type InitFlag = Word32
type Keycode = Int32
type Keymod = Word32
type LogPriority = Word32
type PowerState = Word32
type RendererFlip = Word32
type Scancode = Word32
type SystemCursor = Word32
type ThreadPriority = Word32

module SDL.Raw.Platform
getPlatform :: IO CString

module SDL.Raw.Enum
type AudioStatus = Word32
audioStatusStopped :: AudioStatus
audioStatusPlaying :: AudioStatus
audioStatusPaused :: AudioStatus
type BlendMode = Word32
blendModeNone :: BlendMode
blendModeBlend :: BlendMode
blendModeAdd :: BlendMode
blendModeMod :: BlendMode
type EventAction = Word32
eventActionAddEvent :: EventAction
eventActionPeekEvent :: EventAction
eventActionGetEvent :: EventAction
type GameControllerAxis = Int32
gameControllerAxisInvalid :: GameControllerAxis
gameControllerAxisLeftX :: GameControllerAxis
gameControllerAxisLeftY :: GameControllerAxis
gameControllerAxisRightX :: GameControllerAxis
gameControllerAxisRightY :: GameControllerAxis
gameControllerAxisTriggerLeft :: GameControllerAxis
gameControllerAxisTriggerRight :: GameControllerAxis
gameControllerAxisMax :: GameControllerAxis
type GameControllerButton = Int32
gameControllerButtonInvalid :: GameControllerButton
gameControllerButtonA :: GameControllerButton
gameControllerButtonB :: GameControllerButton
gameControllerButtonX :: GameControllerButton
gameControllerButtonY :: GameControllerButton
gameControllerButtonBack :: GameControllerButton
gameControllerButtonGuide :: GameControllerButton
gameControllerButtonStart :: GameControllerButton
gameControllerButtonLeftStick :: GameControllerButton
gameControllerButtonRightStick :: GameControllerButton
gameControllerButtonLeftShoulder :: GameControllerButton
gameControllerButtonRightShoulder :: GameControllerButton
gameControllerButtonDPadUp :: GameControllerButton
gameControllerButtonDPadDown :: GameControllerButton
gameControllerButtonDPadLeft :: GameControllerButton
gameControllerButtonDPadRight :: GameControllerButton
gameControllerButtonMax :: GameControllerButton
type GLattr = Word32
glAttrRedSize :: GLattr
glAttrGreenSize :: GLattr
glAttrBlueSize :: GLattr
glAttrAlphaSize :: GLattr
glAttrBufferSize :: GLattr
glAttrDoubleBuffer :: GLattr
glAttrDepthSize :: GLattr
glAttrStencilSize :: GLattr
glAttrAccumRedSize :: GLattr
glAttrAccumGreenSize :: GLattr
glAttrAccumBlueSize :: GLattr
glAttrAccumAlphaSize :: GLattr
glAttrStereo :: GLattr
glAttrMultiSampleBuffers :: GLattr
glAttrMultiSampleSamples :: GLattr
glAttrAcceleratedVisual :: GLattr
glAttrRetainedBacking :: GLattr
glAttrContextMajorVersion :: GLattr
glAttrContextMinorVersion :: GLattr
glAttrContextEGL :: GLattr
glAttrContextFlags :: GLattr
glAttrContextProfileMask :: GLattr
glAttrShareWithCurrentContext :: GLattr
glAttrFramebufferSRGBCapable :: GLattr
type HintPriority = Word32
hintPriorityDefault :: HintPriority
hintPriorityNormal :: HintPriority
hintPriorityOverride :: HintPriority
type InitFlag = Word32
initFlagTimer :: InitFlag
initFlagAudio :: InitFlag
initFlagVideo :: InitFlag
initFlagJoystick :: InitFlag
initFlagHaptic :: InitFlag
initFlagGameController :: InitFlag
initFlagEvents :: InitFlag
initFlagNoParachute :: InitFlag
initFlagEverything :: InitFlag
type Keycode = Int32
keycodeUnknown :: Keycode
keycodeReturn :: Keycode
keycodeEscape :: Keycode
keycodeBackspace :: Keycode
keycodeTab :: Keycode
keycodeSpace :: Keycode
keycodeExclaim :: Keycode
keycodeQuoteDbl :: Keycode
keycodeHash :: Keycode
keycodePercent :: Keycode
keycodeDollar :: Keycode
keycodeAmpersand :: Keycode
keycodeQuote :: Keycode
keycodeLeftParen :: Keycode
keycodeRightParen :: Keycode
keycodeAsterisk :: Keycode
keycodePlus :: Keycode
keycodeComma :: Keycode
keycodeMinus :: Keycode
keycodePeriod :: Keycode
keycodeSlash :: Keycode
keycode0 :: Keycode
keycode1 :: Keycode
keycode2 :: Keycode
keycode3 :: Keycode
keycode4 :: Keycode
keycode5 :: Keycode
keycode6 :: Keycode
keycode7 :: Keycode
keycode8 :: Keycode
keycode9 :: Keycode
keycodeColon :: Keycode
keycodeSemicolon :: Keycode
keycodeLess :: Keycode
keycodeEquals :: Keycode
keycodeGreater :: Keycode
keycodeQuestion :: Keycode
keycodeAt :: Keycode
keycodeLeftBracket :: Keycode
keycodeBackslash :: Keycode
keycodeRightBracket :: Keycode
keycodeCaret :: Keycode
keycodeUnderscore :: Keycode
keycodeBackquote :: Keycode
keycodeA :: Keycode
keycodeB :: Keycode
keycodeC :: Keycode
keycodeD :: Keycode
keycodeE :: Keycode
keycodeF :: Keycode
keycodeG :: Keycode
keycodeH :: Keycode
keycodeI :: Keycode
keycodeJ :: Keycode
keycodeK :: Keycode
keycodeL :: Keycode
keycodeM :: Keycode
keycodeN :: Keycode
keycodeO :: Keycode
keycodeP :: Keycode
keycodeQ :: Keycode
keycodeR :: Keycode
keycodeS :: Keycode
keycodeT :: Keycode
keycodeU :: Keycode
keycodeV :: Keycode
keycodeW :: Keycode
keycodeX :: Keycode
keycodeY :: Keycode
keycodeZ :: Keycode
keycodeCapsLock :: Keycode
keycodeF1 :: Keycode
keycodeF2 :: Keycode
keycodeF3 :: Keycode
keycodeF4 :: Keycode
keycodeF5 :: Keycode
keycodeF6 :: Keycode
keycodeF7 :: Keycode
keycodeF8 :: Keycode
keycodeF9 :: Keycode
keycodeF10 :: Keycode
keycodeF11 :: Keycode
keycodeF12 :: Keycode
keycodePrintScreen :: Keycode
keycodeScrollLock :: Keycode
keycodePause :: Keycode
keycodeInsert :: Keycode
keycodeHome :: Keycode
keycodePageUp :: Keycode
keycodeDelete :: Keycode
keycodeEnd :: Keycode
keycodePageDown :: Keycode
keycodeRight :: Keycode
keycodeLeft :: Keycode
keycodeDown :: Keycode
keycodeUp :: Keycode
keycodeNumLockClear :: Keycode
keycodeKPDivide :: Keycode
keycodeKPMultiply :: Keycode
keycodeKPMinus :: Keycode
keycodeKPPlus :: Keycode
keycodeKPEnter :: Keycode
keycodeKP1 :: Keycode
keycodeKP2 :: Keycode
keycodeKP3 :: Keycode
keycodeKP4 :: Keycode
keycodeKP5 :: Keycode
keycodeKP6 :: Keycode
keycodeKP7 :: Keycode
keycodeKP8 :: Keycode
keycodeKP9 :: Keycode
keycodeKP0 :: Keycode
keycodeKPPeriod :: Keycode
keycodeApplication :: Keycode
keycodePower :: Keycode
keycodeKPEquals :: Keycode
keycodeF13 :: Keycode
keycodeF14 :: Keycode
keycodeF15 :: Keycode
keycodeF16 :: Keycode
keycodeF17 :: Keycode
keycodeF18 :: Keycode
keycodeF19 :: Keycode
keycodeF20 :: Keycode
keycodeF21 :: Keycode
keycodeF22 :: Keycode
keycodeF23 :: Keycode
keycodeF24 :: Keycode
keycodeExecute :: Keycode
keycodeHelp :: Keycode
keycodeMenu :: Keycode
keycodeSelect :: Keycode
keycodeStop :: Keycode
keycodeAgain :: Keycode
keycodeUndo :: Keycode
keycodeCut :: Keycode
keycodeCopy :: Keycode
keycodePaste :: Keycode
keycodeFind :: Keycode
keycodeMute :: Keycode
keycodeVolumeUp :: Keycode
keycodeVolumeDown :: Keycode
keycodeKPComma :: Keycode
keycodeKPEqualsAS400 :: Keycode
keycodeAltErase :: Keycode
keycodeSysReq :: Keycode
keycodeCancel :: Keycode
keycodeClear :: Keycode
keycodePrior :: Keycode
keycodeReturn2 :: Keycode
keycodeSeparator :: Keycode
keycodeOut :: Keycode
keycodeOper :: Keycode
keycodeClearAgain :: Keycode
keycodeCrSel :: Keycode
keycodeExSel :: Keycode
keycodeKP00 :: Keycode
keycodeKP000 :: Keycode
keycodeThousandsSeparator :: Keycode
keycodeDecimalSeparator :: Keycode
keycodeCurrencyUnit :: Keycode
keycodeCurrencySubunit :: Keycode
keycodeKPLeftParen :: Keycode
keycodeKPRightParen :: Keycode
keycodeKPLeftBrace :: Keycode
keycodeKPRightBrace :: Keycode
keycodeKPTab :: Keycode
keycodeKPBackspace :: Keycode
keycodeKPA :: Keycode
keycodeKPB :: Keycode
keycodeKPC :: Keycode
keycodeKPD :: Keycode
keycodeKPE :: Keycode
keycodeKPF :: Keycode
keycodeKPXor :: Keycode
keycodeKPPower :: Keycode
keycodeKPPercent :: Keycode
keycodeKPLess :: Keycode
keycodeKPGreater :: Keycode
keycodeKPAmpersand :: Keycode
keycodeKPDblAmpersand :: Keycode
keycodeKPVecticalBar :: Keycode
keycodeKPDblVerticalBar :: Keycode
keycodeKPColon :: Keycode
keycodeKPHash :: Keycode
keycodeKPSpace :: Keycode
keycodeKPAt :: Keycode
keycodeKPExclam :: Keycode
keycodeKPMemStore :: Keycode
keycodeKPMemRecall :: Keycode
keycodeKPMemClear :: Keycode
keycodeKPMemAdd :: Keycode
keycodeKPMemSubtract :: Keycode
keycodeKPMemMultiply :: Keycode
keycodeKPMemDivide :: Keycode
keycodeKPPlusMinus :: Keycode
keycodeKPClear :: Keycode
keycodeKPClearEntry :: Keycode
keycodeKPBinary :: Keycode
keycodeKPOctal :: Keycode
keycodeKPDecimal :: Keycode
keycodeKPHexadecimal :: Keycode
keycodeLCtrl :: Keycode
keycodeLShift :: Keycode
keycodeLAlt :: Keycode
keycodeLGUI :: Keycode
keycodeRCtrl :: Keycode
keycodeRShift :: Keycode
keycodeRAlt :: Keycode
keycodeRGUI :: Keycode
keycodeMode :: Keycode
keycodeAudioNext :: Keycode
keycodeAudioPrev :: Keycode
keycodeAudioStop :: Keycode
keycodeAudioPlay :: Keycode
keycodeAudioMute :: Keycode
keycodeMediaSelect :: Keycode
keycodeWWW :: Keycode
keycodeMail :: Keycode
keycodeCalculator :: Keycode
keycodeComputer :: Keycode
keycodeACSearch :: Keycode
keycodeACHome :: Keycode
keycodeACBack :: Keycode
keycodeACForward :: Keycode
keycodeACStop :: Keycode
keycodeACRefresh :: Keycode
keycodeACBookmarks :: Keycode
keycodeBrightnessDown :: Keycode
keycodeBrightnessUp :: Keycode
keycodeDisplaySwitch :: Keycode
keycodeKbdIllumToggle :: Keycode
keycodeKbdIllumDown :: Keycode
keycodeKbdIllumUp :: Keycode
keycodeEject :: Keycode
keycodeSleep :: Keycode
type Keymod = Word32
keymodNone :: Num a => a
keymodLShift :: Num a => a
keymodRShift :: Num a => a
keymodShift :: Num a => a
keymodLCtrl :: Num a => a
keymodRCtrl :: Num a => a
keymodCtrl :: Num a => a
keymodLAlt :: Num a => a
keymodRAlt :: Num a => a
keymodAlt :: Num a => a
keymodLGUI :: Num a => a
keymodRGUI :: Num a => a
keymodGUI :: Num a => a
keymodNum :: Num a => a
keymodCaps :: Num a => a
keymodMode :: Num a => a
keymodReserved :: Num a => a
type LogPriority = Word32
logPriorityVerbose :: LogPriority
logPriorityDebug :: LogPriority
logPriorityInfo :: LogPriority
logPriorityWarn :: LogPriority
logPriorityError :: LogPriority
logPriorityCritical :: LogPriority
logPriorityPriorities :: LogPriority
type PowerState = Word32
powerStateUnknown :: PowerState
powerStateOnBattery :: PowerState
powerStateNoBattery :: PowerState
powerStateCharging :: PowerState
powerStateCharged :: PowerState
type RendererFlip = Word32
rendererFlipNone :: RendererFlip
rendererFlipHorizontal :: RendererFlip
rendererFlipVertical :: RendererFlip
type Scancode = Word32
scancodeUnknown :: Scancode
scancodeA :: Scancode
scancodeB :: Scancode
scancodeC :: Scancode
scancodeD :: Scancode
scancodeE :: Scancode
scancodeF :: Scancode
scancodeG :: Scancode
scancodeH :: Scancode
scancodeI :: Scancode
scancodeJ :: Scancode
scancodeK :: Scancode
scancodeL :: Scancode
scancodeM :: Scancode
scancodeN :: Scancode
scancodeO :: Scancode
scancodeP :: Scancode
scancodeQ :: Scancode
scancodeR :: Scancode
scancodeS :: Scancode
scancodeT :: Scancode
scancodeU :: Scancode
scancodeV :: Scancode
scancodeW :: Scancode
scancodeX :: Scancode
scancodeY :: Scancode
scancodeZ :: Scancode
scancode1 :: Scancode
scancode2 :: Scancode
scancode3 :: Scancode
scancode4 :: Scancode
scancode5 :: Scancode
scancode6 :: Scancode
scancode7 :: Scancode
scancode8 :: Scancode
scancode9 :: Scancode
scancode0 :: Scancode
scancodeReturn :: Scancode
scancodeEscape :: Scancode
scancodeBackspace :: Scancode
scancodeTab :: Scancode
scancodeSpace :: Scancode
scancodeMinus :: Scancode
scancodeEquals :: Scancode
scancodeLeftBracket :: Scancode
scancodeRightBracket :: Scancode
scancodeBackslash :: Scancode
scancodeNonUSHash :: Scancode
scancodeSemicolon :: Scancode
scancodeApostrophe :: Scancode
scancodeGrave :: Scancode
scancodeComma :: Scancode
scancodePeriod :: Scancode
scancodeSlash :: Scancode
scancodeCapsLock :: Scancode
scancodeF1 :: Scancode
scancodeF2 :: Scancode
scancodeF3 :: Scancode
scancodeF4 :: Scancode
scancodeF5 :: Scancode
scancodeF6 :: Scancode
scancodeF7 :: Scancode
scancodeF8 :: Scancode
scancodeF9 :: Scancode
scancodeF10 :: Scancode
scancodeF11 :: Scancode
scancodeF12 :: Scancode
scancodePrintScreen :: Scancode
scancodeScrollLock :: Scancode
scancodePause :: Scancode
scancodeInsert :: Scancode
scancodeHome :: Scancode
scancodePageUp :: Scancode
scancodeDelete :: Scancode
scancodeEnd :: Scancode
scancodePageDown :: Scancode
scancodeRight :: Scancode
scancodeLeft :: Scancode
scancodeDown :: Scancode
scancodeUp :: Scancode
scancodeNumLockClear :: Scancode
scancodeKPDivide :: Scancode
scancodeKPMultiply :: Scancode
scancodeKPMinus :: Scancode
scancodeKPPlus :: Scancode
scancodeKPEnter :: Scancode
scancodeKP1 :: Scancode
scancodeKP2 :: Scancode
scancodeKP3 :: Scancode
scancodeKP4 :: Scancode
scancodeKP5 :: Scancode
scancodeKP6 :: Scancode
scancodeKP7 :: Scancode
scancodeKP8 :: Scancode
scancodeKP9 :: Scancode
scancodeKP0 :: Scancode
scancodeKPPeriod :: Scancode
scancodeNonUSBackslash :: Scancode
scancodeApplication :: Scancode
scancodePower :: Scancode
scancodeKPEquals :: Scancode
scancodeF13 :: Scancode
scancodeF14 :: Scancode
scancodeF15 :: Scancode
scancodeF16 :: Scancode
scancodeF17 :: Scancode
scancodeF18 :: Scancode
scancodeF19 :: Scancode
scancodeF20 :: Scancode
scancodeF21 :: Scancode
scancodeF22 :: Scancode
scancodeF23 :: Scancode
scancodeF24 :: Scancode
scancodeExecute :: Scancode
scancodeHelp :: Scancode
scancodeMenu :: Scancode
scancodeSelect :: Scancode
scancodeStop :: Scancode
scancodeAgain :: Scancode
scancodeUndo :: Scancode
scancodeCut :: Scancode
scancodeCopy :: Scancode
scancodePaste :: Scancode
scancodeFind :: Scancode
scancodeMute :: Scancode
scancodeVolumeUp :: Scancode
scancodeVolumeDown :: Scancode
scancodeKPComma :: Scancode
scancodeEqualsAs400 :: Scancode
scancodeInternational1 :: Scancode
scancodeInternational2 :: Scancode
scancodeInternational3 :: Scancode
scancodeInternational4 :: Scancode
scancodeInternational5 :: Scancode
scancodeInternational6 :: Scancode
scancodeInternational7 :: Scancode
scancodeInternational8 :: Scancode
scancodeInternational9 :: Scancode
scancodeLang1 :: Scancode
scancodeLang2 :: Scancode
scancodeLang3 :: Scancode
scancodeLang4 :: Scancode
scancodeLang5 :: Scancode
scancodeLang6 :: Scancode
scancodeLang7 :: Scancode
scancodeLang8 :: Scancode
scancodeLang9 :: Scancode
scancodeAltErase :: Scancode
scancodeSysReq :: Scancode
scancodeCancel :: Scancode
scancodeClear :: Scancode
scancodePrior :: Scancode
scancodeReturn2 :: Scancode
scancodeSeparator :: Scancode
scancodeOut :: Scancode
scancodeOper :: Scancode
scancodeClearAgain :: Scancode
scancodeCrSel :: Scancode
scancodeExSel :: Scancode
scancodeKP00 :: Scancode
scancodeKP000 :: Scancode
scancodeThousandsSeparator :: Scancode
scancodeDecimalSeparator :: Scancode
scancodeCurrencyUnit :: Scancode
scancodeCurrencySubunit :: Scancode
scancodeLeftParen :: Scancode
scancodeRightParen :: Scancode
scancodeLeftBrace :: Scancode
scancodeRightBrace :: Scancode
scancodeKPTab :: Scancode
scancodeKPBackspace :: Scancode
scancodeKPA :: Scancode
scancodeKPB :: Scancode
scancodeKPC :: Scancode
scancodeKPD :: Scancode
scancodeKPE :: Scancode
scancodeKPF :: Scancode
scancodeKPXOR :: Scancode
scancodeKPPower :: Scancode
scancodeKPPercent :: Scancode
scancodeKPLess :: Scancode
scancodeKPGreater :: Scancode
scancodeKPAmpersand :: Scancode
scancodeKPDBLAmpersand :: Scancode
scancodeKPVerticalBar :: Scancode
scancodeKPDBLVerticalBar :: Scancode
scancodeKPColon :: Scancode
scancodeKPHash :: Scancode
scancodeKPSpace :: Scancode
scancodeKPAt :: Scancode
scancodeKPExclam :: Scancode
scancodeKPMemStore :: Scancode
scancodeKPMemRecall :: Scancode
scancodeKPMemClear :: Scancode
scancodeKPMemAdd :: Scancode
scancodeKPMemSubtract :: Scancode
scancodeKPMemMultiply :: Scancode
scancodeKPMemDivide :: Scancode
scancodeKPPlusMinus :: Scancode
scancodeKPClear :: Scancode
scancodeKPClearEntry :: Scancode
scancodeKPBinary :: Scancode
scancodeKPOctal :: Scancode
scancodeKPDecimal :: Scancode
scancodeKPHexadecimal :: Scancode
scancodeLCtrl :: Scancode
scancodeLShift :: Scancode
scancodeLAlt :: Scancode
scancodeLGUI :: Scancode
scancodeRCtrl :: Scancode
scancodeRShift :: Scancode
scancodeRAlt :: Scancode
scancodeRGUI :: Scancode
scancodeMode :: Scancode
scancodeAudioNext :: Scancode
scancodeAudioPrev :: Scancode
scancodeAudioStop :: Scancode
scancodeAudioPlay :: Scancode
scancodeAudioMute :: Scancode
scancodeMediaSelect :: Scancode
scancodeWWW :: Scancode
scancodeMail :: Scancode
scancodeCalculator :: Scancode
scancodeComputer :: Scancode
scancodeACSearch :: Scancode
scancodeACHome :: Scancode
scancodeACBack :: Scancode
scancodeACForward :: Scancode
scancodeACStop :: Scancode
scancodeACRefresh :: Scancode
scancodeACBookmarks :: Scancode
scancodeBrightnessDown :: Scancode
scancodeBrightnessUp :: Scancode
scancodeDisplaySwitch :: Scancode
scancodeKBDIllumToggle :: Scancode
scancodeKBDIllumDown :: Scancode
scancodeKBDIllumUp :: Scancode
scancodeEject :: Scancode
scancodeSleep :: Scancode
scancodeApp1 :: Scancode
scancodeApp2 :: Scancode
scancodeNum :: Scancode
type SystemCursor = Word32
systemCursorArrow :: SystemCursor
systemCursorIBeam :: SystemCursor
systemCursorWait :: SystemCursor
systemCursorCrosshair :: SystemCursor
systemCursorWaitArrow :: SystemCursor
systemCursorSizeNWSE :: SystemCursor
systemCursorSizeNESW :: SystemCursor
systemCursorSizeWE :: SystemCursor
systemCursorSizeNS :: SystemCursor
systemCursorSizeAll :: SystemCursor
systemCursorNo :: SystemCursor
systemCursorHand :: SystemCursor
systemCursorNum :: SystemCursor
type ThreadPriority = Word32
threadPriorityLow :: ThreadPriority
threadPriorityNormal :: ThreadPriority
threadPriorityHigh :: ThreadPriority
audioAllowFrequencyChange :: Num a => a
audioAllowFormatChange :: Num a => a
audioAllowChannelsChange :: Num a => a
audioAllowAnyChange :: Num a => a
buttonLeft :: Num a => a
buttonMiddle :: Num a => a
buttonRight :: Num a => a
buttonX1 :: Num a => a
buttonX2 :: Num a => a
buttonLMask :: Num a => a
buttonMMask :: Num a => a
buttonRMask :: Num a => a
buttonX1Mask :: Num a => a
buttonX2Mask :: Num a => a
eventTypeFirstEvent :: Num a => a
eventTypeQuit :: Num a => a
eventTypeAppTerminating :: Num a => a
eventTypeAppLowMemory :: Num a => a
eventTypeAppWillEnterBackground :: Num a => a
eventTypeAppDidEnterBackground :: Num a => a
eventTypeAppWillEnterForeground :: Num a => a
eventTypeAppDidEnterForeground :: Num a => a
eventTypeWindowEvent :: Num a => a
eventTypeSysWMEvent :: Num a => a
eventTypeKeyDown :: Num a => a
eventTypeKeyUp :: Num a => a
eventTypeTextEditing :: Num a => a
eventTypeTextInput :: Num a => a
eventTypeMouseMotion :: Num a => a
eventTypeMouseButtonDown :: Num a => a
eventTypeMouseButtonUp :: Num a => a
eventTypeMouseWheel :: Num a => a
eventTypeJoyAxisMotion :: Num a => a
eventTypeJoyBallMotion :: Num a => a
eventTypeJoyHatMotion :: Num a => a
eventTypeJoyButtonDown :: Num a => a
eventTypeJoyButtonUp :: Num a => a
eventTypeJoyDeviceAdded :: Num a => a
eventTypeJoyDeviceRemoved :: Num a => a
eventTypeControllerAxisMotion :: Num a => a
eventTypeControllerButtonDown :: Num a => a
eventTypeControllerButtonUp :: Num a => a
eventTypeControllerDeviceAdded :: Num a => a
eventTypeControllerDeviceRemoved :: Num a => a
eventTypeControllerDeviceRemapped :: Num a => a
eventTypeFingerDown :: Num a => a
eventTypeFingerUp :: Num a => a
eventTypeFingerMotion :: Num a => a
eventTypeDollarGesture :: Num a => a
eventTypeDollarRecord :: Num a => a
eventTypeMultiGesture :: Num a => a
eventTypeClipboardUpdate :: Num a => a
eventTypeDropFile :: Num a => a
eventTypeUserEvent :: Num a => a
eventTypeLastEvent :: Num a => a
joystickHatCentered :: Num a => a
joystickHatUp :: Num a => a
joystickHatRight :: Num a => a
joystickHatDown :: Num a => a
joystickHatLeft :: Num a => a
joystickHatRightUp :: Num a => a
joystickHatRightDown :: Num a => a
joystickHatLeftUp :: Num a => a
joystickHatLeftDown :: Num a => a
keyPressed :: Num a => a
keyReleased :: Num a => a
logCategoryApplication :: Num a => a
logCategoryError :: Num a => a
logCategoryAssert :: Num a => a
logCategorySystem :: Num a => a
logCategoryAudio :: Num a => a
logCategoryVideo :: Num a => a
logCategoryRender :: Num a => a
logCategoryInput :: Num a => a
logCategoryTest :: Num a => a
logCategoryCustom :: Num a => a
messageBoxFlagError :: Num a => a
messageBoxFlagWarning :: Num a => a
messageBoxFlagInformation :: Num a => a
messageBoxButtonFlagReturnKeyDefault :: Num a => a
messageBoxButtonFlagEscapeKeyDefault :: Num a => a
glProfileCore :: Num a => a
glProfileCompatibility :: Num a => a
glProfileES :: Num a => a
glContextFlagDebug :: Num a => a
glContextFlagForwardCompatible :: Num a => a
glContextFlagRobustAccess :: Num a => a
glContextFlagResetIsolation :: Num a => a
pixelFormatUnknown :: Num a => a
pixelFormatIndex1LSB :: Num a => a
pixelFormatIndex1MSB :: Num a => a
pixelFormatIndex4LSB :: Num a => a
pixelFormatIndex4MSB :: Num a => a
pixelFormatIndex8 :: Num a => a
pixelFormatRGB332 :: Num a => a
pixelFormatRGB444 :: Num a => a
pixelFormatRGB555 :: Num a => a
pixelFormatBGR555 :: Num a => a
pixelFormatARGB4444 :: Num a => a
pixelFormatRGBA4444 :: Num a => a
pixelFormatABGR4444 :: Num a => a
pixelFormatBGRA4444 :: Num a => a
pixelFormatARGB1555 :: Num a => a
pixelFormatRGBA5551 :: Num a => a
pixelFormatABGR1555 :: Num a => a
pixelFormatBGRA5551 :: Num a => a
pixelFormatRGB565 :: Num a => a
pixelFormatBGR565 :: Num a => a
pixelFormatRGB24 :: Num a => a
pixelFormatBGR24 :: Num a => a
pixelFormatRGB888 :: Num a => a
pixelFormatRGBX8888 :: Num a => a
pixelFormatBGR888 :: Num a => a
pixelFormatBGRX8888 :: Num a => a
pixelFormatARGB8888 :: Num a => a
pixelFormatRGBA8888 :: Num a => a
pixelFormatABGR8888 :: Num a => a
pixelFormatBGRA8888 :: Num a => a
pixelFormatARGB2101010 :: Num a => a
pixelFormatYV12 :: Num a => a
pixelFormatIYUV :: Num a => a
pixelFormatYUY2 :: Num a => a
pixelFormatUYVY :: Num a => a
pixelFormatYVYU :: Num a => a
rendererFlagSoftware :: Num a => a
rendererFlagAccelerated :: Num a => a
rendererFlagPresentVSync :: Num a => a
rendererFlagTargetTexture :: Num a => a
textureAccessStatic :: Num a => a
textureAccessStreaming :: Num a => a
textureAccessTarget :: Num a => a
textureModulateNone :: Num a => a
textureModulateColor :: Num a => a
textureModulateAlpha :: Num a => a
windowEventNone :: Num a => a
windowEventShown :: Num a => a
windowEventHidden :: Num a => a
windowEventExposed :: Num a => a
windowEventMoved :: Num a => a
windowEventResized :: Num a => a
windowEventSizeChanged :: Num a => a
windowEventMinimized :: Num a => a
windowEventMaximized :: Num a => a
windowEventRestored :: Num a => a
windowEventEnter :: Num a => a
windowEventLeave :: Num a => a
windowEventFocusGained :: Num a => a
windowEventFocusLost :: Num a => a
windowEventClose :: Num a => a
windowFlagFullscreen :: Num a => a
windowFlagOpenGL :: Num a => a
windowFlagShown :: Num a => a
windowFlagHidden :: Num a => a
windowFlagBorderless :: Num a => a
windowFlagResizable :: Num a => a
windowFlagMinimized :: Num a => a
windowFlagMaximized :: Num a => a
windowFlagInputGrabbed :: Num a => a
windowFlagInputFocus :: Num a => a
windowFlagMouseFocus :: Num a => a
windowFlagFullscreenDesktop :: Num a => a
windowFlagForeign :: Num a => a
windowFlagAllowHighDPI :: Num a => a
windowPosUndefined :: Num a => a
windowPosCentered :: Num a => a

module SDL.Raw.Types
type AudioCallback = FunPtr (Ptr () -> Ptr Word8 -> CInt -> IO ())
type AudioDeviceID = Word32
type AudioFormat = Word16
type Cond = Ptr ()
type Cursor = Ptr ()
type EventFilter = FunPtr (Ptr () -> Ptr Event -> IO CInt)
type FingerID = Int64
type GameController = Ptr ()
type GestureID = Int64
type GLContext = Ptr ()
type Haptic = Ptr ()
type HintCallback = FunPtr (Ptr () -> CString -> CString -> CString -> IO ())
type Joystick = Ptr ()
type JoystickID = Int32
type LogOutputFunction = FunPtr (Ptr () -> CInt -> LogPriority -> CString -> IO ())
type Mutex = Ptr ()
type Renderer = Ptr ()
type Sem = Ptr ()
type SpinLock = CInt
type SysWMinfo = Ptr ()
type SysWMmsg = Ptr ()
type Texture = Ptr ()
type Thread = Ptr ()
type ThreadFunction = FunPtr (Ptr () -> IO CInt)
type ThreadID = CULong
type TimerCallback = FunPtr (Word32 -> Ptr () -> IO Word32)
type TimerID = CInt
type TLSID = CUInt
type TouchID = Int64
type Window = Ptr ()
data Atomic
Atomic :: CInt -> Atomic
atomicValue :: Atomic -> CInt
data AudioCVT
AudioCVT :: CInt -> AudioFormat -> AudioFormat -> CDouble -> Ptr Word8 -> CInt -> CInt -> CInt -> CDouble -> AudioCVT
audioCVTNeeded :: AudioCVT -> CInt
audioCVTSrcFormat :: AudioCVT -> AudioFormat
audioCVTDstFormat :: AudioCVT -> AudioFormat
audioCVTRateIncr :: AudioCVT -> CDouble
audioCVTBuf :: AudioCVT -> Ptr Word8
audioCVTLen :: AudioCVT -> CInt
audioCVTLenCvt :: AudioCVT -> CInt
audioCVTLenMult :: AudioCVT -> CInt
audioCVTLenRatio :: AudioCVT -> CDouble
data AudioSpec
AudioSpec :: CInt -> AudioFormat -> Word8 -> Word8 -> Word16 -> Word32 -> AudioCallback -> Ptr () -> AudioSpec
audioSpecFreq :: AudioSpec -> CInt
audioSpecFormat :: AudioSpec -> AudioFormat
audioSpecChannels :: AudioSpec -> Word8
audioSpecSilence :: AudioSpec -> Word8
audioSpecSamples :: AudioSpec -> Word16
audioSpecSize :: AudioSpec -> Word32
audioSpecCallback :: AudioSpec -> AudioCallback
audioSpecUserdata :: AudioSpec -> Ptr ()
data Color
Color :: Word8 -> Word8 -> Word8 -> Word8 -> Color
colorR :: Color -> Word8
colorG :: Color -> Word8
colorB :: Color -> Word8
colorA :: Color -> Word8
data DisplayMode
DisplayMode :: Word32 -> CInt -> CInt -> CInt -> Ptr () -> DisplayMode
displayModeFormat :: DisplayMode -> Word32
displayModeW :: DisplayMode -> CInt
displayModeH :: DisplayMode -> CInt
displayModeRefreshRate :: DisplayMode -> CInt
displayModeDriverData :: DisplayMode -> Ptr ()
data Event
WindowEvent :: Word32 -> Word32 -> Word32 -> Word8 -> Int32 -> Int32 -> Event
eventType :: Event -> Word32
eventTimestamp :: Event -> Word32
windowEventWindowID :: Event -> Word32
windowEventEvent :: Event -> Word8
windowEventData1 :: Event -> Int32
windowEventData2 :: Event -> Int32
KeyboardEvent :: Word32 -> Word32 -> Word32 -> Word8 -> Word8 -> Keysym -> Event
eventType :: Event -> Word32
eventTimestamp :: Event -> Word32
keyboardEventWindowID :: Event -> Word32
keyboardEventState :: Event -> Word8
keyboardEventRepeat :: Event -> Word8
keyboardEventKeysym :: Event -> Keysym
TextEditingEvent :: Word32 -> Word32 -> Word32 -> [CChar] -> Int32 -> Int32 -> Event
eventType :: Event -> Word32
eventTimestamp :: Event -> Word32
textEditingEventWindowID :: Event -> Word32
textEditingEventText :: Event -> [CChar]
textEditingEventStart :: Event -> Int32
textEditingEventLength :: Event -> Int32
TextInputEvent :: Word32 -> Word32 -> Word32 -> [CChar] -> Event
eventType :: Event -> Word32
eventTimestamp :: Event -> Word32
textInputEventWindowID :: Event -> Word32
textInputEventText :: Event -> [CChar]
MouseMotionEvent :: Word32 -> Word32 -> Word32 -> Word32 -> Word32 -> Int32 -> Int32 -> Int32 -> Int32 -> Event
eventType :: Event -> Word32
eventTimestamp :: Event -> Word32
mouseMotionEventWindowID :: Event -> Word32
mouseMotionEventWhich :: Event -> Word32
mouseMotionEventState :: Event -> Word32
mouseMotionEventX :: Event -> Int32
mouseMotionEventY :: Event -> Int32
mouseMotionEventXRel :: Event -> Int32
mouseMotionEventYRel :: Event -> Int32
MouseButtonEvent :: Word32 -> Word32 -> Word32 -> Word32 -> Word8 -> Word8 -> Word8 -> Int32 -> Int32 -> Event
eventType :: Event -> Word32
eventTimestamp :: Event -> Word32
mouseButtonEventWindowID :: Event -> Word32
mouseButtonEventWhich :: Event -> Word32
mouseButtonEventButton :: Event -> Word8
mouseButtonEventState :: Event -> Word8
mouseButtonEventClicks :: Event -> Word8
mouseButtonEventX :: Event -> Int32
mouseButtonEventY :: Event -> Int32
MouseWheelEvent :: Word32 -> Word32 -> Word32 -> Word32 -> Int32 -> Int32 -> Event
eventType :: Event -> Word32
eventTimestamp :: Event -> Word32
mouseWheelEventWindowID :: Event -> Word32
mouseWheelEventWhich :: Event -> Word32
mouseWheelEventX :: Event -> Int32
mouseWheelEventY :: Event -> Int32
JoyAxisEvent :: Word32 -> Word32 -> JoystickID -> Word8 -> Int16 -> Event
eventType :: Event -> Word32
eventTimestamp :: Event -> Word32
joyAxisEventWhich :: Event -> JoystickID
joyAxisEventAxis :: Event -> Word8
joyAxisEventValue :: Event -> Int16
JoyBallEvent :: Word32 -> Word32 -> JoystickID -> Word8 -> Int16 -> Int16 -> Event
eventType :: Event -> Word32
eventTimestamp :: Event -> Word32
joyBallEventWhich :: Event -> JoystickID
joyBallEventBall :: Event -> Word8
joyBallEventXRel :: Event -> Int16
joyBallEventYRel :: Event -> Int16
JoyHatEvent :: Word32 -> Word32 -> JoystickID -> Word8 -> Word8 -> Event
eventType :: Event -> Word32
eventTimestamp :: Event -> Word32
joyHatEventWhich :: Event -> JoystickID
joyHatEventHat :: Event -> Word8
joyHatEventValue :: Event -> Word8
JoyButtonEvent :: Word32 -> Word32 -> JoystickID -> Word8 -> Word8 -> Event
eventType :: Event -> Word32
eventTimestamp :: Event -> Word32
joyButtonEventWhich :: Event -> JoystickID
joyButtonEventButton :: Event -> Word8
joyButtonEventState :: Event -> Word8
JoyDeviceEvent :: Word32 -> Word32 -> Int32 -> Event
eventType :: Event -> Word32
eventTimestamp :: Event -> Word32
joyDeviceEventWhich :: Event -> Int32
ControllerAxisEvent :: Word32 -> Word32 -> JoystickID -> Word8 -> Int16 -> Event
eventType :: Event -> Word32
eventTimestamp :: Event -> Word32
controllerAxisEventWhich :: Event -> JoystickID
controllerAxisEventAxis :: Event -> Word8
controllerAxisEventValue :: Event -> Int16
ControllerButtonEvent :: Word32 -> Word32 -> JoystickID -> Word8 -> Word8 -> Event
eventType :: Event -> Word32
eventTimestamp :: Event -> Word32
controllerButtonEventWhich :: Event -> JoystickID
controllerButtonEventButton :: Event -> Word8
controllerButtonEventState :: Event -> Word8
ControllerDeviceEvent :: Word32 -> Word32 -> Int32 -> Event
eventType :: Event -> Word32
eventTimestamp :: Event -> Word32
controllerDeviceEventWhich :: Event -> Int32
QuitEvent :: Word32 -> Word32 -> Event
eventType :: Event -> Word32
eventTimestamp :: Event -> Word32
UserEvent :: Word32 -> Word32 -> Word32 -> Int32 -> Ptr () -> Ptr () -> Event
eventType :: Event -> Word32
eventTimestamp :: Event -> Word32
userEventWindowID :: Event -> Word32
userEventCode :: Event -> Int32
userEventData1 :: Event -> Ptr ()
userEventData2 :: Event -> Ptr ()
SysWMEvent :: Word32 -> Word32 -> SysWMmsg -> Event
eventType :: Event -> Word32
eventTimestamp :: Event -> Word32
sysWMEventMsg :: Event -> SysWMmsg
TouchFingerEvent :: Word32 -> Word32 -> TouchID -> FingerID -> CFloat -> CFloat -> CFloat -> CFloat -> CFloat -> Event
eventType :: Event -> Word32
eventTimestamp :: Event -> Word32
touchFingerEventTouchID :: Event -> TouchID
touchFingerEventFingerID :: Event -> FingerID
touchFingerEventX :: Event -> CFloat
touchFingerEventY :: Event -> CFloat
touchFingerEventDX :: Event -> CFloat
touchFingerEventDY :: Event -> CFloat
touchFingerEventPressure :: Event -> CFloat
MultiGestureEvent :: Word32 -> Word32 -> TouchID -> CFloat -> CFloat -> CFloat -> CFloat -> Word16 -> Event
eventType :: Event -> Word32
eventTimestamp :: Event -> Word32
multiGestureEventTouchID :: Event -> TouchID
multiGestureEventDTheta :: Event -> CFloat
multiGestureEventDDist :: Event -> CFloat
multiGestureEventX :: Event -> CFloat
multiGestureEventY :: Event -> CFloat
multiGestureEventNumFingers :: Event -> Word16
DollarGestureEvent :: Word32 -> Word32 -> TouchID -> GestureID -> Word32 -> CFloat -> CFloat -> CFloat -> Event
eventType :: Event -> Word32
eventTimestamp :: Event -> Word32
dollarGestureEventTouchID :: Event -> TouchID
dollarGestureEventGestureID :: Event -> GestureID
dollarGestureEventNumFingers :: Event -> Word32
dollarGestureEventError :: Event -> CFloat
dollarGestureEventX :: Event -> CFloat
dollarGestureEventY :: Event -> CFloat
DropEvent :: Word32 -> Word32 -> CString -> Event
eventType :: Event -> Word32
eventTimestamp :: Event -> Word32
dropEventFile :: Event -> CString
ClipboardUpdateEvent :: Word32 -> Word32 -> Event
eventType :: Event -> Word32
eventTimestamp :: Event -> Word32
UnknownEvent :: Word32 -> Word32 -> Event
eventType :: Event -> Word32
eventTimestamp :: Event -> Word32
data Finger
Finger :: FingerID -> CFloat -> CFloat -> CFloat -> Finger
fingerID :: Finger -> FingerID
fingerX :: Finger -> CFloat
fingerY :: Finger -> CFloat
fingerPressure :: Finger -> CFloat
data GameControllerButtonBind
GameControllerButtonBindNone :: GameControllerButtonBind
GameControllerButtonBindButton :: CInt -> GameControllerButtonBind
gameControllerButtonBindButton :: GameControllerButtonBind -> CInt
GameControllerButtonBindAxis :: CInt -> GameControllerButtonBind
gameControllerButtonBindAxis :: GameControllerButtonBind -> CInt
GameControllerButtonBindHat :: CInt -> CInt -> GameControllerButtonBind
gameControllerButtonBindHat :: GameControllerButtonBind -> CInt
gameControllerButtonBindHatMask :: GameControllerButtonBind -> CInt
data HapticDirection
HapticDirection :: Word8 -> Int32 -> Int32 -> Int32 -> HapticDirection
hapticDirectionType :: HapticDirection -> Word8
hapticDirectionX :: HapticDirection -> Int32
hapticDirectionY :: HapticDirection -> Int32
hapticDirectionZ :: HapticDirection -> Int32
data HapticEffect
HapticConstant :: Word16 -> HapticDirection -> Word32 -> Word16 -> Word16 -> Word16 -> Int16 -> Word16 -> Word16 -> Word16 -> Word16 -> HapticEffect
hapticEffectType :: HapticEffect -> Word16
hapticConstantDirection :: HapticEffect -> HapticDirection
hapticConstantLength :: HapticEffect -> Word32
hapticConstantDelay :: HapticEffect -> Word16
hapticConstantButton :: HapticEffect -> Word16
hapticConstantInterval :: HapticEffect -> Word16
hapticConstantLevel :: HapticEffect -> Int16
hapticConstantAttackLength :: HapticEffect -> Word16
hapticConstantAttackLevel :: HapticEffect -> Word16
hapticConstantFadeLength :: HapticEffect -> Word16
hapticConstantFadeLevel :: HapticEffect -> Word16
HapticPeriodic :: Word16 -> HapticDirection -> Word32 -> Word16 -> Word16 -> Word16 -> Word16 -> Int16 -> Int16 -> Word16 -> Word16 -> Word16 -> Word16 -> Word16 -> HapticEffect
hapticEffectType :: HapticEffect -> Word16
hapticPeriodicDirection :: HapticEffect -> HapticDirection
hapticPeriodicLength :: HapticEffect -> Word32
hapticPeriodicDelay :: HapticEffect -> Word16
hapticPeriodicButton :: HapticEffect -> Word16
hapticPeriodicInterval :: HapticEffect -> Word16
hapticPeriodicPeriod :: HapticEffect -> Word16
hapticPeriodicMagnitude :: HapticEffect -> Int16
hapticPeriodicOffset :: HapticEffect -> Int16
hapticPeriodicPhase :: HapticEffect -> Word16
hapticPeriodicAttackLength :: HapticEffect -> Word16
hapticPeriodicAttackLevel :: HapticEffect -> Word16
hapticPeriodicFadeLength :: HapticEffect -> Word16
hapticPeriodicFadeLevel :: HapticEffect -> Word16
HapticCondition :: Word16 -> Word32 -> Word16 -> Word16 -> Word16 -> [Word16] -> [Word16] -> [Int16] -> [Int16] -> [Word16] -> [Int16] -> HapticEffect
hapticEffectType :: HapticEffect -> Word16
hapticConditionLength :: HapticEffect -> Word32
hapticConditionDelay :: HapticEffect -> Word16
hapticConditionButton :: HapticEffect -> Word16
hapticConditionInterval :: HapticEffect -> Word16
hapticConditionRightSat :: HapticEffect -> [Word16]
hapticConditionLeftSat :: HapticEffect -> [Word16]
hapticConditionRightCoeff :: HapticEffect -> [Int16]
hapticConditionLeftCoeff :: HapticEffect -> [Int16]
hapticConditionDeadband :: HapticEffect -> [Word16]
hapticConditionCenter :: HapticEffect -> [Int16]
HapticRamp :: Word16 -> HapticDirection -> Word32 -> Word16 -> Word16 -> Word16 -> Int16 -> Int16 -> Word16 -> Word16 -> Word16 -> Word16 -> HapticEffect
hapticEffectType :: HapticEffect -> Word16
hapticRampDirection :: HapticEffect -> HapticDirection
hapticRampLength :: HapticEffect -> Word32
hapticRampDelay :: HapticEffect -> Word16
hapticRampButton :: HapticEffect -> Word16
hapticRampInterval :: HapticEffect -> Word16
hapticRampStart :: HapticEffect -> Int16
hapticRampEnd :: HapticEffect -> Int16
hapticRampAttackLength :: HapticEffect -> Word16
hapticRampAttackLevel :: HapticEffect -> Word16
hapticRampFadeLength :: HapticEffect -> Word16
hapticRampFadeLevel :: HapticEffect -> Word16
HapticLeftRight :: Word16 -> Word32 -> Word16 -> Word16 -> HapticEffect
hapticEffectType :: HapticEffect -> Word16
hapticLeftRightLength :: HapticEffect -> Word32
hapticLeftRightLargeMagnitude :: HapticEffect -> Word16
hapticLeftRightSmallMagnitude :: HapticEffect -> Word16
HapticCustom :: Word16 -> HapticDirection -> Word32 -> Word16 -> Word16 -> Word16 -> Word8 -> Word16 -> Word16 -> Ptr Word16 -> Word16 -> Word16 -> Word16 -> Word16 -> HapticEffect
hapticEffectType :: HapticEffect -> Word16
hapticCustomDirection :: HapticEffect -> HapticDirection
hapticCustomLength :: HapticEffect -> Word32
hapticCustomDelay :: HapticEffect -> Word16
hapticCustomButton :: HapticEffect -> Word16
hapticCustomInterval :: HapticEffect -> Word16
hapticCustomChannels :: HapticEffect -> Word8
hapticCustomPeriod :: HapticEffect -> Word16
hapticCustomSamples :: HapticEffect -> Word16
hapticCustomData :: HapticEffect -> Ptr Word16
hapticCustomAttackLength :: HapticEffect -> Word16
hapticCustomAttackLevel :: HapticEffect -> Word16
hapticCustomFadeLength :: HapticEffect -> Word16
hapticCustomFadeLevel :: HapticEffect -> Word16
data JoystickGUID
JoystickGUID :: [Word8] -> JoystickGUID
joystickGUID :: JoystickGUID -> [Word8]
data Keysym
Keysym :: Scancode -> Keycode -> Word16 -> Keysym
keysymScancode :: Keysym -> Scancode
keysymKeycode :: Keysym -> Keycode
keysymMod :: Keysym -> Word16
data MessageBoxButtonData
MessageBoxButtonData :: Word32 -> CInt -> CString -> MessageBoxButtonData
messageBoxButtonDataFlags :: MessageBoxButtonData -> Word32
messageBoxButtonButtonID :: MessageBoxButtonData -> CInt
messageBoxButtonText :: MessageBoxButtonData -> CString
data MessageBoxColor
MessageBoxColor :: Word8 -> Word8 -> Word8 -> MessageBoxColor
messageBoxColorR :: MessageBoxColor -> Word8
messageBoxColorG :: MessageBoxColor -> Word8
messageBoxColorB :: MessageBoxColor -> Word8
data MessageBoxColorScheme
MessageBoxColorScheme :: MessageBoxColor -> MessageBoxColor -> MessageBoxColor -> MessageBoxColor -> MessageBoxColor -> MessageBoxColorScheme
messageBoxColorSchemeColorBackground :: MessageBoxColorScheme -> MessageBoxColor
messageBoxColorSchemeColorText :: MessageBoxColorScheme -> MessageBoxColor
messageBoxColorSchemeColorButtonBorder :: MessageBoxColorScheme -> MessageBoxColor
messageBoxColorSchemeColorButtonBackground :: MessageBoxColorScheme -> MessageBoxColor
messageBoxColorSchemeColorButtonSelected :: MessageBoxColorScheme -> MessageBoxColor
data MessageBoxData
MessageBoxData :: Word32 -> Window -> CString -> CString -> CInt -> Ptr MessageBoxButtonData -> Ptr MessageBoxColorScheme -> MessageBoxData
messageBoxDataFlags :: MessageBoxData -> Word32
messageBoxDataWindow :: MessageBoxData -> Window
messageBoxDataTitle :: MessageBoxData -> CString
messageBoxDataMessage :: MessageBoxData -> CString
messageBoxDataNumButtons :: MessageBoxData -> CInt
messageBoxDataButtons :: MessageBoxData -> Ptr MessageBoxButtonData
messageBoxDataColorScheme :: MessageBoxData -> Ptr MessageBoxColorScheme
data Palette
Palette :: CInt -> Ptr Color -> Palette
paletteNColors :: Palette -> CInt
paletteColors :: Palette -> Ptr Color
data PixelFormat
PixelFormat :: Word32 -> Ptr Palette -> Word8 -> Word8 -> Word32 -> Word32 -> Word32 -> Word32 -> PixelFormat
pixelFormatFormat :: PixelFormat -> Word32
pixelFormatPalette :: PixelFormat -> Ptr Palette
pixelFormatBitsPerPixel :: PixelFormat -> Word8
pixelFormatBytesPerPixel :: PixelFormat -> Word8
pixelFormatRMask :: PixelFormat -> Word32
pixelFormatGMask :: PixelFormat -> Word32
pixelFormatBMask :: PixelFormat -> Word32
pixelFormatAMask :: PixelFormat -> Word32
data Point
Point :: CInt -> CInt -> Point
pointX :: Point -> CInt
pointY :: Point -> CInt
data Rect
Rect :: CInt -> CInt -> CInt -> CInt -> Rect
rectX :: Rect -> CInt
rectY :: Rect -> CInt
rectW :: Rect -> CInt
rectH :: Rect -> CInt
data RendererInfo
RendererInfo :: CString -> Word32 -> Word32 -> [Word32] -> CInt -> CInt -> RendererInfo
rendererInfoName :: RendererInfo -> CString
rendererInfoFlags :: RendererInfo -> Word32
rendererInfoNumTextureFormats :: RendererInfo -> Word32
rendererInfoTextureFormats :: RendererInfo -> [Word32]
rendererInfoMaxTextureWidth :: RendererInfo -> CInt
rendererInfoMaxTextureHeight :: RendererInfo -> CInt
data RWops
RWops :: FunPtr (Ptr RWops -> IO Int64) -> FunPtr (Ptr RWops -> Int64 -> CInt -> IO Int64) -> FunPtr (Ptr RWops -> Ptr () -> CSize -> CSize -> IO CSize) -> FunPtr (Ptr RWops -> Ptr () -> CSize -> CSize -> IO CSize) -> FunPtr (Ptr RWops -> IO CInt) -> Word32 -> RWops
rwopsSize :: RWops -> FunPtr (Ptr RWops -> IO Int64)
rwopsSeek :: RWops -> FunPtr (Ptr RWops -> Int64 -> CInt -> IO Int64)
rwopsRead :: RWops -> FunPtr (Ptr RWops -> Ptr () -> CSize -> CSize -> IO CSize)
rwopsWrite :: RWops -> FunPtr (Ptr RWops -> Ptr () -> CSize -> CSize -> IO CSize)
rwopsClose :: RWops -> FunPtr (Ptr RWops -> IO CInt)
rwopsType :: RWops -> Word32
data Surface
Surface :: Ptr PixelFormat -> CInt -> CInt -> Ptr () -> Ptr () -> Rect -> CInt -> Surface
surfaceFormat :: Surface -> Ptr PixelFormat
surfaceW :: Surface -> CInt
surfaceH :: Surface -> CInt
surfacePixels :: Surface -> Ptr ()
surfaceUserdata :: Surface -> Ptr ()
surfaceClipRect :: Surface -> Rect
surfaceRefcount :: Surface -> CInt
data Version
Version :: Word8 -> Word8 -> Word8 -> Version
versionMajor :: Version -> Word8
versionMinor :: Version -> Word8
versionPatch :: Version -> Word8
instance Eq Atomic
instance Show Atomic
instance Eq AudioCVT
instance Show AudioCVT
instance Eq AudioSpec
instance Show AudioSpec
instance Eq Color
instance Show Color
instance Eq DisplayMode
instance Show DisplayMode
instance Eq Finger
instance Show Finger
instance Eq GameControllerButtonBind
instance Show GameControllerButtonBind
instance Eq HapticDirection
instance Show HapticDirection
instance Eq HapticEffect
instance Show HapticEffect
instance Eq JoystickGUID
instance Show JoystickGUID
instance Eq Keysym
instance Show Keysym
instance Eq Event
instance Show Event
instance Eq MessageBoxButtonData
instance Show MessageBoxButtonData
instance Eq MessageBoxColor
instance Show MessageBoxColor
instance Eq MessageBoxColorScheme
instance Show MessageBoxColorScheme
instance Eq MessageBoxData
instance Show MessageBoxData
instance Eq Palette
instance Show Palette
instance Eq PixelFormat
instance Show PixelFormat
instance Eq Point
instance Show Point
instance Eq Rect
instance Show Rect
instance Eq RendererInfo
instance Show RendererInfo
instance Eq RWops
instance Show RWops
instance Eq Surface
instance Show Surface
instance Eq Version
instance Show Version
instance Storable Version
instance Storable Surface
instance Storable RWops
instance Storable RendererInfo
instance Storable Rect
instance Storable Point
instance Storable PixelFormat
instance Storable Palette
instance Storable MessageBoxData
instance Storable MessageBoxColorScheme
instance Storable MessageBoxColor
instance Storable MessageBoxButtonData
instance Storable Keysym
instance Storable JoystickGUID
instance Storable HapticEffect
instance Storable HapticDirection
instance Storable GameControllerButtonBind
instance Storable Finger
instance Storable Event
instance Storable DisplayMode
instance Storable Color
instance Storable AudioSpec
instance Storable AudioCVT
instance Storable Atomic

module SDL.Raw.Filesystem
getBasePath :: IO CString
getPrefPath :: CString -> CString -> IO CString
allocRW :: IO (Ptr RWops)
freeRW :: Ptr RWops -> IO ()
rwFromConstMem :: Ptr () -> CInt -> IO (Ptr RWops)
rwFromFP :: Ptr () -> Bool -> IO (Ptr RWops)
rwFromFile :: CString -> CString -> IO (Ptr RWops)
rwFromMem :: Ptr () -> CInt -> IO (Ptr RWops)
rwClose :: Ptr RWops -> IO CInt
rwRead :: Ptr RWops -> Ptr () -> CSize -> CSize -> IO CSize
rwSeek :: Ptr RWops -> Int64 -> CInt -> IO Int64
rwTell :: Ptr RWops -> IO Int64
rwWrite :: Ptr RWops -> Ptr () -> CSize -> CSize -> IO CSize
readBE16 :: Ptr RWops -> IO Word16
readBE32 :: Ptr RWops -> IO Word32
readBE64 :: Ptr RWops -> IO Word64
readLE16 :: Ptr RWops -> IO Word16
readLE32 :: Ptr RWops -> IO Word32
readLE64 :: Ptr RWops -> IO Word64
writeBE16 :: Ptr RWops -> Word16 -> IO CSize
writeBE32 :: Ptr RWops -> Word32 -> IO CSize
writeBE64 :: Ptr RWops -> Word64 -> IO CSize
writeLE16 :: Ptr RWops -> Word16 -> IO CSize
writeLE32 :: Ptr RWops -> Word32 -> IO CSize
writeLE64 :: Ptr RWops -> Word64 -> IO CSize

module SDL.Raw.Timer
addTimer :: Word32 -> TimerCallback -> Ptr () -> IO TimerID
delay :: Word32 -> IO ()
getPerformanceCounter :: IO Word64
getPerformanceFrequency :: IO Word64
getTicks :: IO Word32
removeTimer :: TimerID -> IO Bool

module SDL.Raw.Haptic
hapticClose :: Haptic -> IO ()
hapticDestroyEffect :: Haptic -> CInt -> IO ()
hapticEffectSupported :: Haptic -> Ptr HapticEffect -> IO CInt
hapticGetEffectStatus :: Haptic -> CInt -> IO CInt
hapticIndex :: Haptic -> IO CInt
hapticName :: CInt -> IO CString
hapticNewEffect :: Haptic -> Ptr HapticEffect -> IO CInt
hapticNumAxes :: Haptic -> IO CInt
hapticNumEffects :: Haptic -> IO CInt
hapticNumEffectsPlaying :: Haptic -> IO CInt
hapticOpen :: CInt -> IO Haptic
hapticOpenFromJoystick :: Joystick -> IO Haptic
hapticOpenFromMouse :: IO Haptic
hapticOpened :: CInt -> IO CInt
hapticPause :: Haptic -> IO CInt
hapticQuery :: Haptic -> IO CUInt
hapticRumbleInit :: Haptic -> IO CInt
hapticRumblePlay :: Haptic -> CFloat -> Word32 -> IO CInt
hapticRumbleStop :: Haptic -> IO CInt
hapticRumbleSupported :: Haptic -> IO CInt
hapticRunEffect :: Haptic -> CInt -> Word32 -> IO CInt
hapticSetAutocenter :: Haptic -> CInt -> IO CInt
hapticSetGain :: Haptic -> CInt -> IO CInt
hapticStopAll :: Haptic -> IO CInt
hapticStopEffect :: Haptic -> CInt -> IO CInt
hapticUnpause :: Haptic -> IO CInt
hapticUpdateEffect :: Haptic -> CInt -> Ptr HapticEffect -> IO CInt
joystickIsHaptic :: Joystick -> IO CInt
mouseIsHaptic :: IO CInt
numHaptics :: IO CInt

module SDL.Raw.Basic
init :: InitFlag -> IO CInt
initSubSystem :: InitFlag -> IO CInt
quit :: IO ()
quitSubSystem :: InitFlag -> IO ()
setMainReady :: IO ()
wasInit :: InitFlag -> IO Word32
addHintCallback :: CString -> HintCallback -> Ptr () -> IO ()
clearHints :: IO ()
delHintCallback :: CString -> HintCallback -> Ptr () -> IO ()
getHint :: CString -> IO CString
setHint :: CString -> CString -> IO Bool
setHintWithPriority :: CString -> CString -> HintPriority -> IO Bool
clearError :: IO ()
getError :: IO CString
setError :: CString -> IO CInt
log :: CString -> IO ()
logCritical :: CInt -> CString -> IO ()
logDebug :: CInt -> CString -> IO ()
logError :: CInt -> CString -> IO ()
logGetOutputFunction :: Ptr LogOutputFunction -> Ptr (Ptr ()) -> IO ()
logGetPriority :: CInt -> IO LogPriority
logInfo :: CInt -> CString -> IO ()
logMessage :: CInt -> LogPriority -> CString -> IO ()
logResetPriorities :: IO ()
logSetAllPriority :: LogPriority -> IO ()
logSetOutputFunction :: LogOutputFunction -> Ptr () -> IO ()
logSetPriority :: CInt -> LogPriority -> IO ()
logVerbose :: CInt -> CString -> IO ()
logWarn :: CInt -> CString -> IO ()
getRevision :: IO CString
getRevisionNumber :: IO CInt
getVersion :: Ptr Version -> IO ()

module SDL.Raw.Event
addEventWatch :: EventFilter -> Ptr () -> IO ()
delEventWatch :: EventFilter -> Ptr () -> IO ()
eventState :: Word32 -> CInt -> IO Word8
filterEvents :: EventFilter -> Ptr () -> IO ()
flushEvent :: Word32 -> IO ()
flushEvents :: Word32 -> Word32 -> IO ()
getEventFilter :: Ptr EventFilter -> Ptr (Ptr ()) -> IO Bool
getNumTouchDevices :: IO CInt
getNumTouchFingers :: TouchID -> IO CInt
getTouchDevice :: CInt -> IO TouchID
getTouchFinger :: TouchID -> CInt -> IO (Ptr Finger)
hasEvent :: Word32 -> IO Bool
hasEvents :: Word32 -> Word32 -> IO Bool
loadDollarTemplates :: TouchID -> Ptr RWops -> IO CInt
peepEvents :: Ptr Event -> CInt -> EventAction -> Word32 -> Word32 -> IO CInt
pollEvent :: Ptr Event -> IO CInt
pumpEvents :: IO ()
pushEvent :: Ptr Event -> IO CInt
quitRequested :: IO Bool
recordGesture :: TouchID -> IO CInt
registerEvents :: CInt -> IO Word32
saveAllDollarTemplates :: Ptr RWops -> IO CInt
saveDollarTemplate :: GestureID -> Ptr RWops -> IO CInt
setEventFilter :: EventFilter -> Ptr () -> IO ()
waitEvent :: Ptr Event -> IO CInt
waitEventTimeout :: Ptr Event -> CInt -> IO CInt
getKeyFromName :: CString -> IO Keycode
getKeyFromScancode :: Scancode -> IO Keycode
getKeyName :: Keycode -> IO CString
getKeyboardFocus :: IO Window
getKeyboardState :: Ptr CInt -> IO (Ptr Word8)
getModState :: IO Keymod
getScancodeFromKey :: Keycode -> IO Scancode
getScancodeFromName :: CString -> IO Scancode
getScancodeName :: Scancode -> IO CString
hasScreenKeyboardSupport :: IO Bool
isScreenKeyboardShown :: Window -> IO Bool
isTextInputActive :: IO Bool
setModState :: Keymod -> IO ()
setTextInputRect :: Ptr Rect -> IO ()
startTextInput :: IO ()
stopTextInput :: IO ()
createColorCursor :: Ptr Surface -> CInt -> CInt -> IO Cursor
createCursor :: Ptr Word8 -> Ptr Word8 -> CInt -> CInt -> CInt -> CInt -> IO Cursor
createSystemCursor :: SystemCursor -> IO Cursor
freeCursor :: Cursor -> IO ()
getCursor :: IO Cursor
getDefaultCursor :: IO Cursor
getMouseFocus :: IO Window
getMouseState :: Ptr CInt -> Ptr CInt -> IO Word32
getRelativeMouseMode :: IO Bool
getRelativeMouseState :: Ptr CInt -> Ptr CInt -> IO Word32
setCursor :: Cursor -> IO ()
setRelativeMouseMode :: Bool -> IO CInt
showCursor :: CInt -> IO CInt
warpMouseInWindow :: Window -> CInt -> CInt -> IO ()
joystickClose :: Joystick -> IO ()
joystickEventState :: CInt -> IO CInt
joystickGetAttached :: Joystick -> IO Bool
joystickGetAxis :: Joystick -> CInt -> IO Int16
joystickGetBall :: Joystick -> CInt -> Ptr CInt -> Ptr CInt -> IO CInt
joystickGetButton :: Joystick -> CInt -> IO Word8
joystickGetDeviceGUID :: CInt -> IO JoystickGUID
joystickGetGUID :: Joystick -> IO JoystickGUID
joystickGetGUIDFromString :: CString -> IO JoystickGUID
joystickGetGUIDString :: JoystickGUID -> CString -> CInt -> IO ()
joystickGetHat :: Joystick -> CInt -> IO Word8
joystickInstanceID :: Joystick -> IO JoystickID
joystickName :: Joystick -> IO CString
joystickNameForIndex :: CInt -> IO CString
joystickNumAxes :: Joystick -> IO CInt
joystickNumBalls :: Joystick -> IO CInt
joystickNumButtons :: Joystick -> IO CInt
joystickNumHats :: Joystick -> IO CInt
joystickOpen :: CInt -> IO Joystick
joystickUpdate :: IO ()
numJoysticks :: IO CInt
gameControllerAddMapping :: CString -> IO CInt
gameControllerAddMappingsFromFile :: CString -> IO CInt
gameControllerAddMappingsFromRW :: Ptr RWops -> CInt -> IO CInt
gameControllerClose :: GameController -> IO ()
gameControllerEventState :: CInt -> IO CInt
gameControllerGetAttached :: GameController -> IO Bool
gameControllerGetAxis :: GameController -> GameControllerAxis -> IO Int16
gameControllerGetAxisFromString :: CString -> IO GameControllerAxis
gameControllerGetBindForAxis :: GameController -> GameControllerAxis -> IO GameControllerButtonBind
gameControllerGetBindForButton :: GameController -> GameControllerButton -> IO GameControllerButtonBind
gameControllerGetButton :: GameController -> GameControllerButton -> IO Word8
gameControllerGetButtonFromString :: CString -> IO GameControllerButton
gameControllerGetJoystick :: GameController -> IO Joystick
gameControllerGetStringForAxis :: GameControllerAxis -> IO CString
gameControllerGetStringForButton :: GameControllerButton -> IO CString
gameControllerMapping :: GameController -> IO CString
gameControllerMappingForGUID :: JoystickGUID -> IO CString
gameControllerName :: GameController -> IO CString
gameControllerNameForIndex :: CInt -> IO CString
gameControllerOpen :: CInt -> IO GameController
gameControllerUpdate :: IO ()
isGameController :: CInt -> IO Bool

module SDL.Raw.Power
getPowerInfo :: Ptr CInt -> Ptr CInt -> IO PowerState

module SDL.Raw.Thread
createThread :: ThreadFunction -> CString -> IO (Ptr ())
detachThread :: Ptr Thread -> IO ()
getThreadID :: Ptr Thread -> IO ThreadID
getThreadName :: Ptr Thread -> IO CString
setThreadPriority :: ThreadPriority -> IO CInt
tlsCreate :: IO TLSID
tlsGet :: TLSID -> IO (Ptr ())
tlsSet :: TLSID -> Ptr () -> FunPtr (Ptr () -> IO ()) -> IO CInt
threadID :: IO ThreadID
waitThread :: Ptr Thread -> Ptr CInt -> IO ()
condBroadcast :: Ptr Cond -> IO CInt
condSignal :: Ptr Cond -> IO CInt
condWait :: Ptr Cond -> Ptr Mutex -> IO CInt
condWaitTimeout :: Ptr Cond -> Ptr Mutex -> Word32 -> IO CInt
createCond :: IO (Ptr Cond)
createMutex :: IO (Ptr Mutex)
createSemaphore :: Word32 -> IO (Ptr Sem)
destroyCond :: Ptr Cond -> IO ()
destroyMutex :: Ptr Mutex -> IO ()
destroySemaphore :: Ptr Sem -> IO ()
lockMutex :: Ptr Mutex -> IO CInt
semPost :: Ptr Sem -> IO CInt
semTryWait :: Ptr Sem -> IO CInt
semValue :: Ptr Sem -> IO Word32
semWait :: Ptr Sem -> IO CInt
semWaitTimeout :: Ptr Sem -> Word32 -> IO CInt
tryLockMutex :: Ptr Mutex -> IO CInt
unlockMutex :: Ptr Mutex -> IO CInt
atomicAdd :: Ptr Atomic -> CInt -> IO CInt
atomicCAS :: Ptr Atomic -> CInt -> CInt -> IO Bool
atomicCASPtr :: Ptr (Ptr ()) -> Ptr () -> Ptr () -> IO Bool
atomicDecRef :: Ptr Atomic -> IO Bool
atomicGet :: Ptr Atomic -> IO CInt
atomicGetPtr :: Ptr (Ptr ()) -> IO (Ptr ())
atomicIncRef :: Ptr Atomic -> IO CInt
atomicLock :: Ptr SpinLock -> IO ()
atomicSet :: Ptr Atomic -> CInt -> IO CInt
atomicSetPtr :: Ptr (Ptr ()) -> Ptr () -> IO (Ptr ())
atomicTryLock :: Ptr SpinLock -> IO Bool
atomicUnlock :: Ptr SpinLock -> IO ()

module SDL.Raw.Video
createWindow :: CString -> CInt -> CInt -> CInt -> CInt -> Word32 -> IO Window
createWindowAndRenderer :: CInt -> CInt -> Word32 -> Ptr Window -> Ptr Renderer -> IO CInt
createWindowFrom :: Ptr () -> IO Window
destroyWindow :: Window -> IO ()
disableScreenSaver :: IO ()
enableScreenSaver :: IO ()
glBindTexture :: Texture -> Ptr CFloat -> Ptr CFloat -> IO CInt
glCreateContext :: Window -> IO GLContext
glDeleteContext :: GLContext -> IO ()
glExtensionSupported :: CString -> IO Bool
glGetAttribute :: GLattr -> Ptr CInt -> IO CInt
glGetCurrentContext :: IO GLContext
glGetCurrentWindow :: IO Window
glGetDrawableSize :: Window -> Ptr CInt -> Ptr CInt -> IO ()
glGetProcAddress :: CString -> IO (Ptr ())
glGetSwapInterval :: IO CInt
glLoadLibrary :: CString -> IO CInt
glMakeCurrent :: Window -> GLContext -> IO CInt
glResetAttributes :: IO ()
glSetAttribute :: GLattr -> CInt -> IO CInt
glSetSwapInterval :: CInt -> IO CInt
glSwapWindow :: Window -> IO ()
glUnbindTexture :: Texture -> IO CInt
glUnloadLibrary :: IO ()
getClosestDisplayMode :: CInt -> Ptr DisplayMode -> Ptr DisplayMode -> IO (Ptr DisplayMode)
getCurrentDisplayMode :: CInt -> Ptr DisplayMode -> IO CInt
getCurrentVideoDriver :: IO CString
getDesktopDisplayMode :: CInt -> Ptr DisplayMode -> IO CInt
getDisplayBounds :: CInt -> Ptr Rect -> IO CInt
getDisplayMode :: CInt -> CInt -> Ptr DisplayMode -> IO CInt
getDisplayName :: CInt -> IO CString
getNumDisplayModes :: CInt -> IO CInt
getNumVideoDisplays :: IO CInt
getNumVideoDrivers :: IO CInt
getVideoDriver :: CInt -> IO CString
getWindowBrightness :: Window -> IO CFloat
getWindowData :: Window -> CString -> IO (Ptr ())
getWindowDisplayIndex :: Window -> IO CInt
getWindowDisplayMode :: Window -> Ptr DisplayMode -> IO CInt
getWindowFlags :: Window -> IO Word32
getWindowFromID :: Word32 -> IO Window
getWindowGammaRamp :: Window -> Ptr Word16 -> Ptr Word16 -> Ptr Word16 -> IO CInt
getWindowGrab :: Window -> IO Bool
getWindowID :: Window -> IO Word32
getWindowMaximumSize :: Window -> Ptr CInt -> Ptr CInt -> IO ()
getWindowMinimumSize :: Window -> Ptr CInt -> Ptr CInt -> IO ()
getWindowPixelFormat :: Window -> IO Word32
getWindowPosition :: Window -> Ptr CInt -> Ptr CInt -> IO ()
getWindowSize :: Window -> Ptr CInt -> Ptr CInt -> IO ()
getWindowSurface :: Window -> IO (Ptr Surface)
getWindowTitle :: Window -> IO CString
hideWindow :: Window -> IO ()
isScreenSaverEnabled :: IO Bool
maximizeWindow :: Window -> IO ()
minimizeWindow :: Window -> IO ()
raiseWindow :: Window -> IO ()
restoreWindow :: Window -> IO ()
setWindowBordered :: Window -> Bool -> IO ()
setWindowBrightness :: Window -> CFloat -> IO CInt
setWindowData :: Window -> CString -> Ptr () -> IO (Ptr ())
setWindowDisplayMode :: Window -> Ptr DisplayMode -> IO CInt
setWindowFullscreen :: Window -> Word32 -> IO CInt
setWindowGammaRamp :: Window -> Ptr Word16 -> Ptr Word16 -> Ptr Word16 -> IO CInt
setWindowGrab :: Window -> Bool -> IO ()
setWindowIcon :: Window -> Ptr Surface -> IO ()
setWindowMaximumSize :: Window -> CInt -> CInt -> IO ()
setWindowMinimumSize :: Window -> CInt -> CInt -> IO ()
setWindowPosition :: Window -> CInt -> CInt -> IO ()
setWindowSize :: Window -> CInt -> CInt -> IO ()
setWindowTitle :: Window -> CString -> IO ()
showMessageBox :: Ptr MessageBoxData -> Ptr CInt -> IO CInt
showSimpleMessageBox :: Word32 -> CString -> CString -> Window -> IO CInt
showWindow :: Window -> IO ()
updateWindowSurface :: Window -> IO CInt
updateWindowSurfaceRects :: Window -> Ptr Rect -> CInt -> IO CInt
videoInit :: CString -> IO CInt
videoQuit :: IO ()
createRenderer :: Window -> CInt -> Word32 -> IO Renderer
createSoftwareRenderer :: Ptr Surface -> IO Renderer
createTexture :: Renderer -> Word32 -> CInt -> CInt -> CInt -> IO Texture
createTextureFromSurface :: Renderer -> Ptr Surface -> IO Texture
destroyRenderer :: Renderer -> IO ()
destroyTexture :: Texture -> IO ()
getNumRenderDrivers :: IO CInt
getRenderDrawBlendMode :: Renderer -> IO Int
getRenderDrawColor :: Renderer -> Ptr Word8 -> Ptr Word8 -> Ptr Word8 -> Ptr Word8 -> IO CInt
getRenderDriverInfo :: CInt -> Ptr RendererInfo -> IO CInt
getRenderTarget :: Renderer -> IO Texture
getRenderer :: Window -> IO Renderer
getRendererInfo :: Renderer -> Ptr RendererInfo -> IO CInt
getRendererOutputSize :: Renderer -> Ptr CInt -> Ptr CInt -> IO CInt
getTextureAlphaMod :: Texture -> Ptr Word8 -> IO CInt
getTextureBlendMode :: Texture -> Ptr BlendMode -> IO CInt
getTextureColorMod :: Texture -> Ptr Word8 -> Ptr Word8 -> Ptr Word8 -> IO CInt
lockTexture :: Texture -> Ptr Rect -> Ptr (Ptr ()) -> Ptr CInt -> IO CInt
queryTexture :: Texture -> Word32 -> Ptr CInt -> Ptr CInt -> Ptr CInt -> IO CInt
renderClear :: Renderer -> IO CInt
renderCopy :: Renderer -> Texture -> Ptr Rect -> Ptr Rect -> IO CInt
renderCopyEx :: Renderer -> Texture -> Ptr Rect -> Ptr Rect -> CDouble -> Ptr Point -> RendererFlip -> IO CInt
renderDrawLine :: Renderer -> CInt -> CInt -> CInt -> CInt -> IO CInt
renderDrawLines :: Renderer -> Ptr Point -> CInt -> IO CInt
renderDrawPoint :: Renderer -> CInt -> CInt -> IO CInt
renderDrawPoints :: Renderer -> Ptr Point -> CInt -> IO CInt
renderDrawRect :: Renderer -> Ptr Rect -> IO CInt
renderDrawRects :: Renderer -> Ptr Rect -> CInt -> IO CInt
renderFillRect :: Renderer -> Ptr Rect -> IO CInt
renderFillRects :: Renderer -> Ptr Rect -> CInt -> IO CInt
renderGetClipRect :: Renderer -> Ptr Rect -> IO ()
renderGetLogicalSize :: Renderer -> Ptr CInt -> Ptr CInt -> IO ()
renderGetScale :: Renderer -> Ptr CFloat -> Ptr CFloat -> IO ()
renderGetViewport :: Renderer -> Ptr Rect -> IO ()
renderPresent :: Renderer -> IO ()
renderReadPixels :: Renderer -> Ptr Rect -> Word32 -> Ptr () -> CInt -> IO CInt
renderSetClipRect :: Renderer -> Ptr Rect -> IO CInt
renderSetLogicalSize :: Renderer -> CInt -> CInt -> IO CInt
renderSetScale :: Renderer -> CFloat -> CFloat -> IO CInt
renderSetViewport :: Renderer -> Ptr Rect -> IO CInt
renderTargetSupported :: Renderer -> IO Bool
setRenderDrawBlendMode :: Renderer -> BlendMode -> IO CInt
setRenderDrawColor :: Renderer -> Word8 -> Word8 -> Word8 -> Word8 -> IO CInt
setRenderTarget :: Renderer -> Texture -> IO CInt
setTextureAlphaMod :: Texture -> Word8 -> IO CInt
setTextureBlendMode :: Texture -> BlendMode -> IO CInt
setTextureColorMod :: Texture -> Word8 -> Word8 -> Word8 -> IO CInt
unlockTexture :: Texture -> IO ()
updateTexture :: Texture -> Ptr Rect -> Ptr () -> CInt -> IO CInt
updateYUVTexture :: Texture -> Ptr Rect -> Ptr Word8 -> CInt -> Ptr Word8 -> CInt -> Ptr Word8 -> CInt -> IO CInt
allocFormat :: Word32 -> IO (Ptr PixelFormat)
allocPalette :: CInt -> IO (Ptr Palette)
calculateGammaRamp :: CFloat -> Ptr Word16 -> IO ()
freeFormat :: Ptr PixelFormat -> IO ()
freePalette :: Ptr Palette -> IO ()
getPixelFormatName :: Word32 -> IO CString
getRGB :: Word32 -> Ptr PixelFormat -> Ptr Word8 -> Ptr Word8 -> Ptr Word8 -> IO ()
getRGBA :: Word32 -> Ptr PixelFormat -> Ptr Word8 -> Ptr Word8 -> Ptr Word8 -> Ptr Word8 -> IO ()
mapRGB :: Ptr PixelFormat -> Word8 -> Word8 -> Word8 -> IO Word32
mapRGBA :: Ptr PixelFormat -> Word8 -> Word8 -> Word8 -> Word8 -> IO Word32
masksToPixelFormatEnum :: CInt -> Word32 -> Word32 -> Word32 -> Word32 -> IO Word32
pixelFormatEnumToMasks :: Word32 -> Ptr CInt -> Ptr Word32 -> Ptr Word32 -> Ptr Word32 -> Ptr Word32 -> IO Bool
setPaletteColors :: Ptr Palette -> Ptr Color -> CInt -> CInt -> IO CInt
setPixelFormatPalette :: Ptr PixelFormat -> Ptr Palette -> IO CInt
enclosePoints :: Ptr Point -> CInt -> Ptr Rect -> Ptr Rect -> IO Bool
hasIntersection :: Ptr Rect -> Ptr Rect -> IO Bool
intersectRect :: Ptr Rect -> Ptr Rect -> Ptr Rect -> IO Bool
intersectRectAndLine :: Ptr Rect -> Ptr CInt -> Ptr CInt -> Ptr CInt -> Ptr CInt -> IO Bool
unionRect :: Ptr Rect -> Ptr Rect -> Ptr Rect -> IO ()
blitScaled :: Ptr Surface -> Ptr Rect -> Ptr Surface -> Ptr Rect -> IO CInt
blitSurface :: Ptr Surface -> Ptr Rect -> Ptr Surface -> Ptr Rect -> IO CInt
convertPixels :: CInt -> CInt -> Word32 -> Ptr () -> CInt -> Word32 -> Ptr () -> CInt -> IO CInt
convertSurface :: Ptr Surface -> Ptr PixelFormat -> Word32 -> IO (Ptr Surface)
convertSurfaceFormat :: Ptr Surface -> Word32 -> Word32 -> IO (Ptr Surface)
createRGBSurface :: Word32 -> CInt -> CInt -> CInt -> Word32 -> Word32 -> Word32 -> Word32 -> IO (Ptr Surface)
createRGBSurfaceFrom :: Ptr () -> CInt -> CInt -> CInt -> CInt -> Word32 -> Word32 -> Word32 -> Word32 -> IO (Ptr Surface)
fillRect :: Ptr Surface -> Ptr Rect -> Word32 -> IO CInt
fillRects :: Ptr Surface -> Ptr Rect -> CInt -> Word32 -> IO CInt
freeSurface :: Ptr Surface -> IO ()
getClipRect :: Ptr Surface -> Ptr Rect -> IO ()
getColorKey :: Ptr Surface -> Ptr Word32 -> IO CInt
getSurfaceAlphaMod :: Ptr Surface -> Ptr Word8 -> IO CInt
getSurfaceBlendMode :: Ptr Surface -> BlendMode -> IO CInt
getSurfaceColorMod :: Ptr Surface -> Ptr Word8 -> Ptr Word8 -> Ptr Word8 -> IO CInt
loadBMP :: CString -> IO (Ptr Surface)
loadBMP_RW :: Ptr RWops -> CInt -> IO (Ptr Surface)
lockSurface :: Ptr Surface -> IO CInt
lowerBlit :: Ptr Surface -> Ptr Rect -> Ptr Surface -> Ptr Rect -> IO CInt
lowerBlitScaled :: Ptr Surface -> Ptr Rect -> Ptr Surface -> Ptr Rect -> IO CInt
saveBMP :: Ptr Surface -> CString -> IO CInt
saveBMP_RW :: Ptr Surface -> Ptr RWops -> CInt -> IO CInt
setClipRect :: Ptr Surface -> Ptr Rect -> IO Bool
setColorKey :: Ptr Surface -> CInt -> Word32 -> IO CInt
setSurfaceAlphaMod :: Ptr Surface -> Word8 -> IO CInt
setSurfaceBlendMode :: Ptr Surface -> BlendMode -> IO CInt
setSurfaceColorMod :: Ptr Surface -> Word8 -> Word8 -> Word8 -> IO CInt
setSurfacePalette :: Ptr Surface -> Ptr Palette -> IO CInt
setSurfaceRLE :: Ptr Surface -> CInt -> IO CInt
unlockSurface :: Ptr Surface -> IO ()
getWindowWMInfo :: Window -> SysWMinfo -> IO Bool
getClipboardText :: IO CString
hasClipboardText :: IO Bool
setClipboardText :: CString -> IO CInt

module SDL.Raw.Audio
audioInit :: CString -> IO CInt
audioQuit :: IO ()
buildAudioCVT :: Ptr AudioCVT -> AudioFormat -> Word8 -> CInt -> AudioFormat -> Word8 -> CInt -> IO CInt
closeAudio :: IO ()
closeAudioDevice :: AudioDeviceID -> IO ()
convertAudio :: Ptr AudioCVT -> IO CInt
freeWAV :: Ptr Word8 -> IO ()
getAudioDeviceName :: CInt -> CInt -> IO CString
getAudioDeviceStatus :: AudioDeviceID -> IO AudioStatus
getAudioDriver :: CInt -> IO CString
getAudioStatus :: IO AudioStatus
getCurrentAudioDriver :: IO CString
getNumAudioDevices :: CInt -> IO CInt
getNumAudioDrivers :: IO CInt
loadWAV :: CString -> Ptr AudioSpec -> Ptr (Ptr Word8) -> Ptr Word32 -> IO (Ptr AudioSpec)
loadWAV_RW :: Ptr RWops -> CInt -> Ptr AudioSpec -> Ptr (Ptr Word8) -> Ptr Word32 -> IO (Ptr AudioSpec)
lockAudio :: IO ()
lockAudioDevice :: AudioDeviceID -> IO ()
mixAudio :: Ptr Word8 -> Ptr Word8 -> Word32 -> CInt -> IO ()
mixAudioFormat :: Ptr Word8 -> Ptr Word8 -> AudioFormat -> Word32 -> CInt -> IO ()
openAudio :: Ptr AudioSpec -> Ptr AudioSpec -> IO CInt
openAudioDevice :: CString -> CInt -> Ptr AudioSpec -> Ptr AudioSpec -> CInt -> IO AudioDeviceID
pauseAudio :: CInt -> IO ()
pauseAudioDevice :: AudioDeviceID -> CInt -> IO ()
unlockAudio :: IO ()
unlockAudioDevice :: AudioDeviceID -> IO ()


-- | Raw low-level FFI bindings to the sdl2 C library. Ease of use is not a
--   design factor, use <a>SDL</a> instead if you can.
module SDL.Raw


module SDL.Window

module SDL.Time

-- | Number of milliseconds since library initialization.
ticks :: IO Word32

-- | The current time in seconds since some arbitrary starting point.
time :: Fractional a => IO a


module SDL.Power


module SDL.Joystick

module SDL.Exception
data SDLException
SDLCallFailed :: !Text -> !Text -> !Text -> SDLException
sdlExceptionCaller :: SDLException -> !Text
sdlFunction :: SDLException -> !Text
sdlExceptionError :: SDLException -> !Text
SDLUnexpectedArgument :: !Text -> !Text -> !String -> SDLException
sdlExceptionCaller :: SDLException -> !Text
sdlFunction :: SDLException -> !Text
sdlUnknownValue :: SDLException -> !String
fromC :: Show a => Text -> Text -> (a -> Maybe b) -> a -> b
getError :: IO Text
throwIf :: (a -> Bool) -> Text -> Text -> IO a -> IO a
throwIf_ :: (a -> Bool) -> Text -> Text -> IO a -> IO ()
throwIf0 :: (Eq a, Num a) => Text -> Text -> IO a -> IO a
throwIfNeg :: (Num a, Ord a) => Text -> Text -> IO a -> IO a
throwIfNeg_ :: (Num a, Ord a) => Text -> Text -> IO a -> IO ()
throwIfNot0 :: (Eq a, Num a) => Text -> Text -> IO a -> IO a
throwIfNot0_ :: (Eq a, Num a) => Text -> Text -> IO a -> IO ()
throwIfNull :: Text -> Text -> IO (Ptr a) -> IO (Ptr a)
instance Typeable SDLException
instance Eq SDLException
instance Ord SDLException
instance Read SDLException
instance Show SDLException
instance Exception SDLException

module SDL.Filesystem

-- | An absolute path to the application data directory.
--   
--   The path is guaranteed to end with a path separator.
--   
--   Throws <a>SDLException</a> on failure, or if the platform does not
--   implement this functionality.
getBasePath :: IO Text

-- | A path to a unique per user and per application directory for the
--   given organization and application name, intended for writing
--   preferences and other personal files.
--   
--   The path is guaranteed to end with a path separator.
--   
--   You should assume the path returned by this function is the only safe
--   place to write files to.
--   
--   Throws <a>SDLException</a> on failure.
getPrefPath :: Text -> Text -> IO Text

module SDL.Haptic
data AvailableHapticDevice
availableHapticDeviceName :: AvailableHapticDevice -> Text
availableHapticDeviceIds :: IO (Vector AvailableHapticDevice)
data OpenHapticDevice
OpenHapticMouse :: OpenHapticDevice
OpenHapticJoystick :: Joystick -> OpenHapticDevice
OpenHapticDevice :: AvailableHapticDevice -> OpenHapticDevice
openHaptic :: OpenHapticDevice -> IO HapticDevice
data HapticDevice
hapticDeviceName :: HapticDevice -> Text
hapticDeviceNumAxes :: HapticDevice -> CInt
data Effect
Haptic :: Word32 -> Word16 -> Word16 -> Word16 -> EffectType -> Effect
effectLength :: Effect -> Word32
effectDelay :: Effect -> Word16
effectButton :: Effect -> Word16
effectInterval :: Effect -> Word16
effectType :: Effect -> EffectType
data EffectType
HapticConstant :: HapticDirection -> Int16 -> EffectEnvelope -> EffectType
hapticConstantDirection :: EffectType -> HapticDirection
hapticConstantLevel :: EffectType -> Int16
hapticConstantEnvelope :: EffectType -> EffectEnvelope
HapticPeriodic :: EffectShape -> HapticDirection -> Word16 -> Int16 -> Int16 -> Word16 -> EffectEnvelope -> EffectType
hapticPeriodicShape :: EffectType -> EffectShape
hapticPeriodicDirection :: EffectType -> HapticDirection
hapticPeriodicPeriod :: EffectType -> Word16
hapticPeriodicMagnitude :: EffectType -> Int16
hapticPeriodicOffset :: EffectType -> Int16
hapticPeriodicPhase :: EffectType -> Word16
hapticPeriodicEnvelope :: EffectType -> EffectEnvelope
HapticCondition :: ConditionType -> [Word16] -> [Word16] -> [Int16] -> [Int16] -> [Word16] -> [Int16] -> EffectType
hapticConditionType :: EffectType -> ConditionType
hapticConditionRightSat :: EffectType -> [Word16]
hapticConditionLeftSat :: EffectType -> [Word16]
hapticConditionRightCoeff :: EffectType -> [Int16]
hapticConditionLeftCoeff :: EffectType -> [Int16]
hapticConditionDeadband :: EffectType -> [Word16]
hapticConditionCenter :: EffectType -> [Int16]
HapticRamp :: HapticDirection -> Int16 -> Int16 -> EffectEnvelope -> EffectType
hapticRampDirection :: EffectType -> HapticDirection
hapticRampStart :: EffectType -> Int16
hapticRampEnd :: EffectType -> Int16
hapticRampEnvelope :: EffectType -> EffectEnvelope
HapticLeftRight :: Word32 -> Word16 -> Word16 -> EffectType
hapticLeftRightLength :: EffectType -> Word32
hapticLeftRightLargeMagnitude :: EffectType -> Word16
hapticLeftRightSmallMagnitude :: EffectType -> Word16
HapticCustom :: HapticDirection -> Word8 -> Word16 -> Vector Word16 -> EffectEnvelope -> EffectType
hapticCustomDirection :: EffectType -> HapticDirection
hapticCustomChannels :: EffectType -> Word8
hapticCustomPeriod :: EffectType -> Word16
hapticCustomSamples :: EffectType -> Vector Word16
hapticCustomEnvelope :: EffectType -> EffectEnvelope
instance Eq EffectEnvelope
instance Show EffectEnvelope
instance Eq EffectShape
instance Show EffectShape
instance Eq ConditionType
instance Show ConditionType
instance Eq EffectType
instance Show EffectType
instance Eq Effect
instance Show Effect

module SDL.Init

-- | Initializes SDL and the given subsystems. Do not call any SDL
--   functions prior to this one, unless otherwise documented that you may
--   do so.
--   
--   Throws <a>SDLException</a> if initialization fails.
init :: Foldable f => f InitFlag -> IO ()

-- | Initialize individual subsystems. SDL needs to be initializied prior
--   to calls to this function.
--   
--   Throws <a>SDLException</a> if initialization fails.
initSubSystem :: Foldable f => f InitFlag -> IO ()
data InitFlag
InitTimer :: InitFlag
InitAudio :: InitFlag
InitVideo :: InitFlag
InitJoystick :: InitFlag
InitHaptic :: InitFlag
InitGameController :: InitFlag
InitEvents :: InitFlag
InitEverything :: InitFlag
InitNoParachute :: InitFlag
quit :: IO ()
instance Eq InitFlag
instance Ord InitFlag
instance Show InitFlag
instance Read InitFlag
instance Bounded InitFlag
instance Enum InitFlag

module SDL.Video.OpenGL
data GLAttribute
GLRedSize :: GLAttribute
GLGreenSize :: GLAttribute
GLBlueSize :: GLAttribute
GLAlphaSize :: GLAttribute
GLBufferSize :: GLAttribute
GLDoubleBuffer :: GLAttribute
GLDepthSize :: GLAttribute
GLStencilSize :: GLAttribute
GLAccumRedSize :: GLAttribute
GLAccumGreenSize :: GLAttribute
GLAccumBlueSize :: GLAttribute
GLAccumAlphaSize :: GLAttribute
GLStereo :: GLAttribute
GLMultiSampleBuffers :: GLAttribute
GLMultiSampleSamples :: GLAttribute
GLAcceleratedVisual :: GLAttribute
GLRetainedBacking :: GLAttribute
GLContextMajorVersion :: GLAttribute
GLContextMinorVersion :: GLAttribute
GLContextFlags :: GLAttribute
GLContextProfileMask :: GLAttribute
GLShareWithCurrentContext :: GLAttribute
GLFramebufferSRGBCapable :: GLAttribute
GLContextEGL :: GLAttribute
glSetAttribute :: GLAttribute -> CInt -> IO ()

-- | Replace the contents of the front buffer with the back buffer's. The
--   contents of the back buffer are undefined, clear them with
--   <tt>glClear</tt> or equivalent before drawing to them again.
glSwapWindow :: Window -> IO ()
glGetCurrentContext :: IO GLContext

-- | Create a new OpenGL context and makes it the current context for the
--   window.
--   
--   Throws <a>SDLException</a> if the window wasn't configured with OpenGL
--   support, or if context creation fails.
glCreateContext :: Window -> IO GLContext
glGetProcAddress :: CString -> IO (Ptr ())
data SwapInterval
ImmediateUpdates :: SwapInterval
SynchronizedUpdates :: SwapInterval
LateSwapTearing :: SwapInterval
glSetSwapInterval :: SwapInterval -> IO ()
glResetAttributes :: IO ()
instance Numbered GLAttribute Word32

module SDL.Video.Renderer
data Renderer
blitSurface :: Surface -> Maybe (Rectangle CInt) -> Surface -> Maybe (Rectangle CInt) -> IO ()
createTextureFromSurface :: Renderer -> Surface -> IO Texture
fillRect :: Surface -> Maybe (Rectangle CInt) -> Word32 -> IO ()
freeSurface :: Surface -> IO ()
loadBMP :: FilePath -> IO Surface
mapRGB :: Surface -> Word8 -> Word8 -> Word8 -> IO Word32
getWindowSurface :: Window -> IO Surface
setRenderDrawBlendMode :: Renderer -> BlendMode -> IO ()
setRenderDrawColor :: Renderer -> V4 Word8 -> IO ()
updateWindowSurface :: Window -> IO ()
data BlendMode
BlendNone :: BlendMode
BlendAlphaBlend :: BlendMode
BlendAdditive :: BlendMode
BlendMod :: BlendMode
data Rectangle a
Rectangle :: (Point V2 a) -> (V2 a) -> Rectangle a
data Surface
data Texture
renderClear :: Renderer -> IO ()
renderCopy :: Renderer -> Texture -> Maybe (Rectangle CInt) -> Maybe (Rectangle CInt) -> IO ()
renderDrawLine :: Renderer -> Point V2 CInt -> Point V2 CInt -> IO ()
renderDrawLines :: Renderer -> Vector (Point V2 CInt) -> IO ()
renderDrawPoint :: Renderer -> Point V2 CInt -> IO ()
renderDrawPoints :: Renderer -> Vector (Point V2 CInt) -> IO ()
renderDrawRect :: Renderer -> Rectangle CInt -> IO ()
renderDrawRects :: Renderer -> Vector (Rectangle CInt) -> IO ()
renderFillRect :: Renderer -> Maybe (Rectangle CInt) -> IO ()
renderFillRects :: Renderer -> Vector (Rectangle CInt) -> IO ()
renderPresent :: Renderer -> IO ()
renderSetClipRect :: Renderer -> Maybe (Rectangle CInt) -> IO ()
renderSetLogicalSize :: Renderer -> V2 CInt -> IO ()
renderSetScale :: Renderer -> V2 CFloat -> IO ()
renderSetViewport :: Renderer -> Maybe (Rectangle CInt) -> IO ()
instance Eq BlendMode
instance Show BlendMode
instance Storable a => Storable (Rectangle a)
instance Numbered BlendMode Word32

module SDL.Video
data Window

-- | Create a window with the given title and configuration.
--   
--   Throws <a>SDLException</a> on failure.
createWindow :: Text -> WindowConfig -> IO Window

-- | Default configuration for windows. Use the record update syntax to
--   override any of the defaults.
defaultWindow :: WindowConfig
data WindowConfig
WindowConfig :: Bool -> Bool -> Bool -> WindowMode -> Bool -> WindowPosition -> Bool -> V2 CInt -> WindowConfig

-- | Defaults to <a>True</a>.
windowBorder :: WindowConfig -> Bool

-- | Defaults to <a>False</a>. Can not be changed after window creation.
windowHighDPI :: WindowConfig -> Bool

-- | Defaults to <a>False</a>. Whether the mouse shall be confined to the
--   window.
windowInputGrabbed :: WindowConfig -> Bool

-- | Defaults to <a>Windowed</a>.
windowMode :: WindowConfig -> WindowMode

-- | Defaults to <a>False</a>. Can not be changed after window creation.
windowOpenGL :: WindowConfig -> Bool

-- | Defaults to <a>Wherever</a>.
windowPosition :: WindowConfig -> WindowPosition

-- | Defaults to <a>False</a>. Whether the window can be resized by the
--   user. It is still possible to programatically change the size with
--   <a>setWindowSize</a>.
windowResizable :: WindowConfig -> Bool

-- | Defaults to <tt>(800, 600)</tt>.
windowSize :: WindowConfig -> V2 CInt
data WindowMode

-- | Real fullscreen with a video mode change
Fullscreen :: WindowMode

-- | Fake fullscreen that takes the size of the desktop
FullscreenDesktop :: WindowMode
Maximized :: WindowMode
Minimized :: WindowMode
Windowed :: WindowMode
data WindowPosition
Centered :: WindowPosition

-- | Let the window mananger decide where it's best to place the window.
Wherever :: WindowPosition
Absolute :: (Point V2 CInt) -> WindowPosition

-- | Destroy the given window. The <a>Window</a> handler may not be used
--   afterwards.
destroyWindow :: Window -> IO ()
hideWindow :: Window -> IO ()

-- | Raise the window above other windows and set the input focus.
raiseWindow :: Window -> IO ()
showWindow :: Window -> IO ()
getWindowMinimumSize :: Window -> IO (V2 CInt)
getWindowMaximumSize :: Window -> IO (V2 CInt)

-- | Set whether the window should have a border or not.
setWindowBordered :: Window -> Bool -> IO ()

-- | Set the window's brightness, where 0.0 is completely dark and 1.0 is
--   normal brightness.
--   
--   Throws <a>SDLException</a> if the hardware does not support gamma
--   correction, or if the system has run out of memory.
setWindowBrightness :: Window -> Float -> IO ()
setWindowGammaRamp :: Window -> Maybe (Vector Word16) -> Maybe (Vector Word16) -> Maybe (Vector Word16) -> IO ()

-- | Set whether the mouse shall be confined to the window.
setWindowGrab :: Window -> Bool -> IO ()

-- | Change between window modes.
--   
--   Throws <a>SDLException</a> on failure.
setWindowMode :: Window -> WindowMode -> IO ()
setWindowMaximumSize :: Window -> V2 CInt -> IO ()
setWindowMinimumSize :: Window -> V2 CInt -> IO ()

-- | Set the position of the window.
setWindowPosition :: Window -> WindowPosition -> IO ()

-- | Set the size of the window. Values beyond the maximum supported size
--   are clamped.
setWindowSize :: Window -> V2 CInt -> IO ()

-- | Set the title of the window.
setWindowTitle :: Window -> Text -> IO ()

-- | Get the text from the clipboard.
--   
--   Throws <a>SDLException</a> on failure.
getClipboardText :: IO Text

-- | Checks if the clipboard exists, and has some text in it.
hasClipboardText :: IO Bool

-- | Replace the contents of the clipboard with the given text.
--   
--   Throws <a>SDLException</a> on failure.
setClipboardText :: Text -> IO ()

-- | Throws <a>SDLException</a> on failure.
getDisplays :: IO [Display]
data Display
Display :: String -> Point V2 CInt -> V2 CInt -> [DisplayMode] -> Display
displayName :: Display -> String

-- | Position of the desktop area represented by the display, with the
--   primary display located at <tt>(0, 0)</tt>.
displayBoundsPosition :: Display -> Point V2 CInt

-- | Size of the desktop area represented by the display.
displayBoundsSize :: Display -> V2 CInt
displayModes :: Display -> [DisplayMode]
data DisplayMode
DisplayMode :: PixelFormat -> V2 CInt -> CInt -> DisplayMode
displayModeFormat :: DisplayMode -> PixelFormat
displayModeSize :: DisplayMode -> V2 CInt

-- | Display's refresh rate in hertz, or <tt>0</tt> if unspecified.
displayModeRefreshRate :: DisplayMode -> CInt
data VideoDriver
VideoDriver :: String -> VideoDriver
videoDriverName :: VideoDriver -> String
data PixelFormat
Unknown :: PixelFormat
Index1LSB :: PixelFormat
Index1MSB :: PixelFormat
Index4LSB :: PixelFormat
Index4MSB :: PixelFormat
Index8 :: PixelFormat
RGB332 :: PixelFormat
RGB444 :: PixelFormat
RGB555 :: PixelFormat
BGR555 :: PixelFormat
ARGB4444 :: PixelFormat
RGBA4444 :: PixelFormat
ABGR4444 :: PixelFormat
BGRA4444 :: PixelFormat
ARGB1555 :: PixelFormat
RGBA5551 :: PixelFormat
ABGR1555 :: PixelFormat
BGRA5551 :: PixelFormat
RGB565 :: PixelFormat
BGR565 :: PixelFormat
RGB24 :: PixelFormat
BGR24 :: PixelFormat
RGB888 :: PixelFormat
RGBX8888 :: PixelFormat
BGR888 :: PixelFormat
BGRX8888 :: PixelFormat
ARGB8888 :: PixelFormat
RGBA8888 :: PixelFormat
ABGR8888 :: PixelFormat
BGRA8888 :: PixelFormat
ARGB2101010 :: PixelFormat
YV12 :: PixelFormat
IYUV :: PixelFormat
YUY2 :: PixelFormat
UYVY :: PixelFormat
YVYU :: PixelFormat

-- | Disable screen savers.
disableScreenSaver :: IO ()

-- | Enable screen savers.
enableScreenSaver :: IO ()

-- | Check whether screen savers are enabled.
isScreenSaverEnabled :: IO Bool

-- | Show a simple message box with the given title and a message. Consider
--   writing your messages to <tt>stderr</tt> too.
--   
--   Throws <a>SDLException</a> if there are no available video targets.
showSimpleMessageBox :: Maybe Window -> MessageKind -> Text -> Text -> IO ()
data MessageKind
Error :: MessageKind
Warning :: MessageKind
Information :: MessageKind
instance Eq WindowMode
instance Show WindowMode
instance Eq WindowPosition
instance Show WindowPosition
instance Eq WindowConfig
instance Show WindowConfig
instance Eq VideoDriver
instance Show VideoDriver
instance Eq PixelFormat
instance Show PixelFormat
instance Eq DisplayMode
instance Show DisplayMode
instance Eq Display
instance Show Display
instance Eq MessageKind
instance Show MessageKind
instance Numbered WindowMode Word32

module SDL.Events
data Event
Event :: Word32 -> EventPayload -> Event
eventTimestamp :: Event -> Word32
eventPayload :: Event -> EventPayload
data EventPayload
WindowEvent :: WindowID -> WindowEvent -> EventPayload
windowEventWindowID :: EventPayload -> WindowID
windowEventEvent :: EventPayload -> WindowEvent
KeyboardEvent :: WindowID -> KeyMotion -> KeyState -> Bool -> Keysym -> EventPayload
keyboardEventWindowID :: EventPayload -> WindowID
keyboardEventKeyMotion :: EventPayload -> KeyMotion
keyboardEventState :: EventPayload -> KeyState
keyboardEventRepeat :: EventPayload -> Bool
keyboardEventKeysym :: EventPayload -> Keysym
TextEditingEvent :: WindowID -> Text -> Int32 -> Int32 -> EventPayload
textEditingEventWindowID :: EventPayload -> WindowID
textEditingEventText :: EventPayload -> Text
textEditingEventStart :: EventPayload -> Int32
textEditingEventLength :: EventPayload -> Int32
TextInputEvent :: WindowID -> Text -> EventPayload
textInputEventWindowID :: EventPayload -> WindowID
textInputEventText :: EventPayload -> Text
MouseMotionEvent :: WindowID -> Word32 -> Word32 -> Point V2 Int32 -> V2 Int32 -> EventPayload
mouseMotionEventWindowID :: EventPayload -> WindowID
mouseMotionEventWhich :: EventPayload -> Word32
mouseMotionEventState :: EventPayload -> Word32
mouseMotionEventPos :: EventPayload -> Point V2 Int32
mouseMotionEventRelMotion :: EventPayload -> V2 Int32
MouseButtonEvent :: WindowID -> MouseMotion -> Word32 -> MouseButton -> Word8 -> Word8 -> Point V2 Int32 -> EventPayload
mouseButtonEventWindowID :: EventPayload -> WindowID
mouseButtonEventMotion :: EventPayload -> MouseMotion
mouseButtonEventWhich :: EventPayload -> Word32
mouseButtonEventButton :: EventPayload -> MouseButton
mouseButtonEventState :: EventPayload -> Word8
mouseButtonEventClicks :: EventPayload -> Word8
mouseButtonEventPos :: EventPayload -> Point V2 Int32
MouseWheelEvent :: WindowID -> Word32 -> V2 Int32 -> EventPayload
mouseWheelEventWindowID :: EventPayload -> WindowID
mouseWheelEventWhich :: EventPayload -> Word32
mouseWheelEventPos :: EventPayload -> V2 Int32
JoyAxisEvent :: JoystickID -> Word8 -> Int16 -> EventPayload
joyAxisEventWhich :: EventPayload -> JoystickID
joyAxisEventAxis :: EventPayload -> Word8
joyAxisEventValue :: EventPayload -> Int16
JoyBallEvent :: JoystickID -> Word8 -> V2 Int16 -> EventPayload
joyBallEventWhich :: EventPayload -> JoystickID
joyBallEventBall :: EventPayload -> Word8
joyBallEventRelMotion :: EventPayload -> V2 Int16
JoyHatEvent :: JoystickID -> Word8 -> Word8 -> EventPayload
joyHatEventWhich :: EventPayload -> JoystickID
joyHatEventHat :: EventPayload -> Word8
joyHatEventValue :: EventPayload -> Word8
JoyButtonEvent :: JoystickID -> Word8 -> Word8 -> EventPayload
joyButtonEventWhich :: EventPayload -> JoystickID
joyButtonEventButton :: EventPayload -> Word8
joyButtonEventState :: EventPayload -> Word8
JoyDeviceEvent :: Int32 -> EventPayload
joyDeviceEventWhich :: EventPayload -> Int32
ControllerAxisEvent :: JoystickID -> Word8 -> Int16 -> EventPayload
controllerAxisEventWhich :: EventPayload -> JoystickID
controllerAxisEventAxis :: EventPayload -> Word8
controllerAxisEventValue :: EventPayload -> Int16
ControllerButtonEvent :: JoystickID -> Word8 -> Word8 -> EventPayload
controllerButtonEventWhich :: EventPayload -> JoystickID
controllerButtonEventButton :: EventPayload -> Word8
controllerButtonEventState :: EventPayload -> Word8
ControllerDeviceEvent :: Int32 -> EventPayload
controllerDeviceEventWhich :: EventPayload -> Int32
QuitEvent :: EventPayload
UserEvent :: WindowID -> Int32 -> Ptr () -> Ptr () -> EventPayload
userEventWindowID :: EventPayload -> WindowID
userEventCode :: EventPayload -> Int32
userEventData1 :: EventPayload -> Ptr ()
userEventData2 :: EventPayload -> Ptr ()
SysWMEvent :: SysWMmsg -> EventPayload
sysWMEventMsg :: EventPayload -> SysWMmsg
TouchFingerEvent :: TouchID -> FingerID -> Point V2 CFloat -> V2 CFloat -> CFloat -> EventPayload
touchFingerEventTouchID :: EventPayload -> TouchID
touchFingerEventFingerID :: EventPayload -> FingerID
touchFingerEventPos :: EventPayload -> Point V2 CFloat
touchFingerEventRelMotion :: EventPayload -> V2 CFloat
touchFingerEventPressure :: EventPayload -> CFloat
MultiGestureEvent :: TouchID -> CFloat -> CFloat -> Point V2 CFloat -> Word16 -> EventPayload
multiGestureEventTouchID :: EventPayload -> TouchID
multiGestureEventDTheta :: EventPayload -> CFloat
multiGestureEventDDist :: EventPayload -> CFloat
multiGestureEventPos :: EventPayload -> Point V2 CFloat
multiGestureEventNumFingers :: EventPayload -> Word16
DollarGestureEvent :: TouchID -> GestureID -> Word32 -> CFloat -> Point V2 CFloat -> EventPayload
dollarGestureEventTouchID :: EventPayload -> TouchID
dollarGestureEventGestureID :: EventPayload -> GestureID
dollarGestureEventNumFingers :: EventPayload -> Word32
dollarGestureEventError :: EventPayload -> CFloat
dollagGestureEventPos :: EventPayload -> Point V2 CFloat
DropEvent :: CString -> EventPayload
dropEventFile :: EventPayload -> CString
ClipboardUpdateEvent :: EventPayload
UnknownEvent :: Word32 -> EventPayload
unknownEventType :: EventPayload -> Word32
data KeyMotion
KeyUp :: KeyMotion
KeyDown :: KeyMotion
data MouseButton
ButtonLeft :: MouseButton
ButtonMiddle :: MouseButton
ButtonRight :: MouseButton
ButtonX1 :: MouseButton
ButtonX2 :: MouseButton
data MouseMotion
MouseButtonUp :: MouseMotion
MouseButtonDown :: MouseMotion
data WindowEvent
WindowShown :: WindowEvent
WindowHidden :: WindowEvent
WindowExposed :: WindowEvent
WindowMoved :: (Point V2 Int32) -> WindowEvent
WindowResized :: (V2 Int32) -> WindowEvent
WindowSizeChanged :: WindowEvent
WindowMinimized :: WindowEvent
WindowMaximized :: WindowEvent
WindowRestored :: WindowEvent
WindowGainedMouseFocus :: WindowEvent
WindowLostMouseFocus :: WindowEvent
WindowGainedKeyboardFocus :: WindowEvent
WindowLostKeyboardFocus :: WindowEvent
WindowClosed :: WindowEvent
pollEvent :: IO (Maybe Event)
pumpEvents :: IO ()
waitEvent :: IO Event
instance Eq KeyMotion
instance Show KeyMotion
instance Eq KeyState
instance Show KeyState
instance Eq WindowEvent
instance Show WindowEvent
instance Eq MouseMotion
instance Show MouseMotion
instance Eq MouseButton
instance Show MouseButton
instance Eq EventPayload
instance Show EventPayload
instance Eq Event
instance Show Event

module SDL.Audio
data AudioFormat
data AudioSpec
audioSpecSilence :: AudioSpec -> Word8
audioSpecSize :: AudioSpec -> Word32
audioSpecCallback :: AudioSpec -> (CInt -> IO (Vector Word8))
data Channels
Mono :: Channels
Stereo :: Channels
Quad :: Channels
FivePointOne :: Channels
data AudioDevice
getAudioDeviceNames :: AudioDeviceUsage -> IO (Maybe (Vector Text))
openAudioDevice :: OpenDeviceSpec -> IO (AudioDevice, AudioSpec)
closeAudioDevice :: AudioDevice -> IO ()
data LockState
Locked :: LockState
Unlocked :: LockState
setAudioDeviceLocked :: AudioDevice -> LockState -> IO ()
data PlaybackState
Pause :: PlaybackState
Play :: PlaybackState
setAudioDevicePlaybackState :: AudioDevice -> PlaybackState -> IO ()
data AudioDeviceStatus
Playing :: AudioDeviceStatus
Paused :: AudioDeviceStatus
Stopped :: AudioDeviceStatus
audioDeviceStatus :: AudioDevice -> IO AudioDeviceStatus
data OpenDeviceSpec
OpenDeviceSpec :: !(Changeable CInt) -> !(Changeable AudioFormat) -> !(Changeable Channels) -> !Word16 -> !(CInt -> IO (Vector Word8)) -> !AudioDeviceUsage -> !(Maybe Text) -> OpenDeviceSpec
openDeviceFreq :: OpenDeviceSpec -> !(Changeable CInt)
openDeviceFormat :: OpenDeviceSpec -> !(Changeable AudioFormat)
openDeviceChannels :: OpenDeviceSpec -> !(Changeable Channels)
openDeviceSamples :: OpenDeviceSpec -> !Word16
openDeviceCallback :: OpenDeviceSpec -> !(CInt -> IO (Vector Word8))
openDeviceUsage :: OpenDeviceSpec -> !AudioDeviceUsage
openDeviceName :: OpenDeviceSpec -> !(Maybe Text)
data Changeable a
Mandate :: !a -> Changeable a
Desire :: !a -> Changeable a
data AudioDeviceUsage
ForPlayback :: AudioDeviceUsage
ForCapture :: AudioDeviceUsage
data AudioDriver
audioDriverName :: AudioDriver -> Text
getAudioDrivers :: IO (Vector AudioDriver)
currentAudioDriver :: IO (Maybe Text)
audioInit :: AudioDriver -> IO ()
audioQuit :: IO ()
instance Eq AudioFormat
instance Ord AudioFormat
instance Show AudioFormat


-- | Main module, re-exports the bulk of the API.
module SDL
